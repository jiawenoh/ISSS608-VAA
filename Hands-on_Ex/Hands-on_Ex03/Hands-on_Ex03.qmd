---
title: "Hands-on_Ex03"
author: "Oh Jia Wen"
date: 4/29/2022
---

## Getting started

1.  Using p_load() of pacman package to load the required libraries

```{r}
pacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse) 
```

2.  Importing data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```
## Plotting the graph with **ggiraph**

### 1) Interactive Data Visualization.

Student ID will appear when the mouse hovered to the specific data point. 

#### Output:

```{r}
p <-ggplot(data=exam_data, 
       aes(x = MATHS)) +
    geom_dotplot_interactive(
       aes(tooltip = ID),
       stackgroups = TRUE, 
       binwidth = 1, 
       method = "histodot") +
       scale_y_continuous(NULL, breaks = NULL)
    
    girafe(
       ggobj = p,
       width_svg = 6,
       height_svg = 6*0.618
             )
```

#### 1.1) Displaying multiple information with tooltip

Student ID and Class will appear when the mouse hovered to the specific data point. 

#### Output:

```{r}
exam_data$tooltip <- c(paste0(     
  "Name = ", exam_data$ID,         
  "\n Class = ", exam_data$CLASS)) 

p <- ggplot(data=exam_data, 
       aes(x = MATHS)) +
     geom_dotplot_interactive(
       aes(tooltip = exam_data$tooltip), 
       stackgroups = TRUE,
       binwidth = 1,
       method = "histodot") +
       scale_y_continuous(NULL, breaks = NULL)

     girafe(
       ggobj = p,
       width_svg = 8,
       height_svg = 8*0.618
           )
```

#### 1.2) Customizing Tooltip style

When the mouse hovered to the specific data point, the student ID will appear. We will customize the output to black and bold font with white background.

#### Output:
```{r}
tooltip_css <- "background-color:white; #<<
font-style:bold; color:black;" #<<

p <- ggplot(data=exam_data, 
       aes(x = MATHS)) +
     geom_dotplot_interactive(              
       aes(tooltip = ID),                   
       stackgroups = TRUE,                  
       binwidth = 1,                        
       method = "histodot") +               
       scale_y_continuous(NULL,               
                     breaks = NULL)
    girafe(                                  
      ggobj = p,                             
      width_svg = 6,                         
      height_svg = 6*0.618,
      options = list(    #<<
      opts_tooltip(    #<<
      css = tooltip_css)) #<<
          )                                        
```

#### 1.3) Displaying statistics with tooltip

When the mouse hovered to the specific data point, statistics will appear. In the below output, confidence interval will be displayed at 90% CI. 

#### Output:

```{r}
tooltip <- function(y, ymax, accuracy = .01) {
  mean <- scales::number(y, accuracy = accuracy)
  sem <- scales::number(ymax - y, accuracy = accuracy)
  paste("Mean Maths Scores:", mean, "+/-", sem)
}

gg_point <- ggplot(data=exam_data, 
                   aes(x = RACE),) +
            stat_summary(aes(y = MATHS, 
                   tooltip = after_stat(  
                  tooltip(y, ymax))),  
            fun.data = "mean_se", 
                  geom = GeomInteractiveCol,  
                  fill = "light blue"
                  ) +
           stat_summary(aes(y = MATHS),
                 fun.data = mean_se,
                 geom = "errorbar", width = 0.2, linewidth = 0.2
                  )

           girafe(ggobj = gg_point,
               width_svg = 8,
               height_svg = 8*0.618)
```


#### 1.4) Hover effect with **data_id** aesthetic

When the mouse hovered to the specific data point, data points that are associated with the data_id(CLASS) will be highlighted. 

#### Output:

```{r}
p <- ggplot(data=exam_data, 
       aes(x = MATHS)) +
     geom_dotplot_interactive(           
       aes(data_id = CLASS),             
       stackgroups = TRUE,               
       binwidth = 1,                        
       method = "histodot") +               
     scale_y_continuous(NULL, breaks = NULL)

     girafe(                                  
       ggobj = p,                             
       width_svg = 6,                         
       height_svg = 6*0.618                      
        )                                        
```

#### 1.5) Customizing Hover effect

Similar to 1.2, we will customize the Hover Effect with the help of CSS. 

#### Output:

```{r}
p <- ggplot(data=exam_data, 
       aes(x = MATHS)) +
     geom_dotplot_interactive(              
       aes(data_id = CLASS),              
       stackgroups = TRUE,                  
       binwidth = 1,                        
       method = "histodot") +               
     scale_y_continuous(NULL, breaks = NULL)
     girafe(                                  
       ggobj = p,                             
       width_svg = 6,                         
       height_svg = 6*0.618,
       options = list(                        
       opts_hover(css = "fill: #202020;"),  
       opts_hover_inv(css = "opacity:0.2;") 
           )                                        
             )                                        
```
#### 1.6) Combining Tooltip and Hover Effect 

In the below output, we will combine both Interactive Data Visualisation. The respective data points and the associated points will be reflected. 

#### Output:

```{r}
p <- ggplot(data=exam_data, 
       aes(x = MATHS)) +
     geom_dotplot_interactive(              
       aes(tooltip = CLASS, 
       data_id = CLASS),              
       stackgroups = TRUE,                  
       binwidth = 1,                        
       method = "histodot") +               
     scale_y_continuous(NULL, breaks = NULL)
     
     girafe(                                  
       ggobj = p,                             
       width_svg = 6,                         
       height_svg = 6*0.618,
      options = list(                        
      opts_hover(css = "fill: #202020;"),  
      opts_hover_inv(css = "opacity:0.2;") 
         )                                        
           )                                        
```

