[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "Using p_load() of pacman package to load the required libraries\n\n\npacman::p_load(ggstatsplot, tidyverse,rstantools)\n\n\nImporting data\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visual-statistical-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visual-statistical-analysis",
    "title": "Hands-on Exercise 4",
    "section": "1) Visual Statistical Analysis",
    "text": "1) Visual Statistical Analysis\n\n1.1) One-sample test: gghistostats() method\nIn the below output, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nOutput:\n\nset.seed(1234)\n\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\n\n\n\n1.2) Two-sample mean test: ggbetweenstats()\nIn the below output, ggbetweenstats() is used to to build an visual of two-sample mean test.\n\nOutput:\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n\n\n1.3) One-way ANOVA Test: ggbetweenstats() method\nIn the below output, ggbetweenstats() is used to to build an visual of one-way ANOVA test.\n\nOutput:\n\nggbetweenstats(\n  data = exam_data, \n  x = RACE, \n  y = ENGLISH, \n  type = \"p\", \n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE,\n  #\"ns\" for only non-significant, \"s\" for only significant, \"all\" for everything\n  pairwise.display = \"s\",      \n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  )\n\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything\n\n\n\n\n1.4) Significant Test of Correlation: ggscatterstats()\nIn the below output, ggscatterstats() is used to to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nOutput:\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n1.5) Significant Test of Association (Depedence) : ggbarstats() methods\nIn the below output, ggbarstats() is used to to build a visual for Significant Test of Association (Dependence).\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nOutput:\n\nexam1 <- exam_data |> \n  mutate(MATHS_bins =\n           cut(MATHS, \n               breaks = c(0, 60, 75, 85, 100)))\n\nIn this code chunk below, ggbarstats() is used to build a visual for Significant Test of Association.\n\nggbarstats(\n  data = exam1,\n  x = MATHS_bins,\n  y = GENDER\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-models",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-models",
    "title": "Hands-on Exercise 4",
    "section": "2) Visualising Models",
    "text": "2) Visualising Models\n\n2.1) Getting Started\n\nUsing p_load() of pacman package to load the required libraries\n\n\npacman::p_load(readxl, performance, parameters, see)\n\n\nImporting data\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …\n\n\nNote: car_resale is a tibble data frame.\n\n\n2.2) Multiple Regression Model using lm()\nIn the below output, lm() is used to calibrate a multiple linear regression model of Base Stats of R.\n\nOutput:\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\n\n2.3) Model Diagnostic: Checking for multicolinearity using check_collinearity()\nIn the below output, check_collinearity() is used to check for multicolinearity.\n\nOutput:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\nAs per figure above, Age_08_04 and Mfg_Year are highly correlated.\nRemove/Drop Mfg_Year.\n\n\n\n2.3) Model Diagnostic: Checking for normality assumption using check_normality()\nIn the below output, check_normality() is used to check for normality assumption. #### Output:\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\n\n\nplot(check_n)\n\n\n\n\nBased on the figure above, we will reject the Null hypothesis and infer that the model failed to conform to normaility assumption.\n\n\n2.4) Model Diagnostic: Checking model for homogeneity of variances using check_heteroscedasticity()\nIn the below output, check_heteroscedasticity() is used to check model for homogeneity of variances.\n\nOutput:\n\ncheck_h <- check_heteroscedasticity(model1)\n\n\nplot(check_h)\n\n\n\n\n\n\n\n2.5) Model Diagnostic: Complete check using check_model()\nIn the below output, check_model() is used.\n\nOutput:\n\ncheck_model(model1)\n\n\n\n\n\n\n\n2.6) Visualising Regression Parameters\nIn the below output, plot() of see package and parameters() of parameters package are used to visualize the parameters of a regression model.\n\nOutput:\n\nplot(parameters(model1))\n\n\n\n\nIn the below output, ggcoefstats() of ggstatsplot package is used to visualize the parameters of a regression model.\n\n\nOutput:\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty",
    "title": "Hands-on Exercise 4",
    "section": "3) Visualising Uncertainty",
    "text": "3) Visualising Uncertainty\n\n3.1) Getting Started\n\nUsing p_load() of pacman package to load the required libraries\n\n\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)\n\n\nImporting data\n\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\n\n3.2) Visualizing the uncertainty of point estimates of using ggplot2\nIn the below output, ggplot2 is used.\nIt performs group by RACE and compute by calculating the observation, mean, standard deviation, and standard error of MATHS score by RACE. Then, it saves the output as a tibble data table called my_sum.\n\nOutput:\n\nmy_sum <- exam_data |> \n  group_by(RACE) |> \n  summarize(\n    n = n(),\n    mean = mean(MATHS),\n    sd = sd(MATHS)) |>\n  mutate(se = sd/sqrt(n-1))\nmy_sum$RACE  <- fct_reorder(my_sum$RACE, my_sum$mean, .desc = TRUE)\n\nNext, the code chunk below will be shown in html format.\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\n\n\n3.2.1 ) Reveal the standard error of mean Maths score by race\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")\n\n\n\n\n\n\n3.2.2 ) Reveal the 95% confidence interval of mean Maths score by race\nError bars sorted by the average maths scores.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean - 1.96*se, \n        ymax=mean + 1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\" 95% confidence interval of mean maths score by race \")\n\n\n\n\n\n\n3.2.3) Visualizing the uncertainty of point estimates with interactive error bars\n\nd <- highlight_key(my_sum) \n\np <- ggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean - 2.58*se, \n        ymax=mean + 2.58*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  \n    geom_point(aes\n           (x=RACE, \n            y=mean,\n            text = paste(\"Race:\", RACE,\n                     \"<br>N:\", n,\n                     \"<br>Avg. Scores:\", round(mean, digits = 2),\n                     \"<br>99% CI:[\", round(mean - 2.58*se, digits = 2), \", \", round(mean + 2.58*se, digits = 2), \"]\")), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  \n  ggtitle(\" 99% confidence interval of mean maths score by race \")\n\ngg <- highlight(ggplotly(p,tooltip = \"text\"),        \n                \"plotly_selected\")  \n\ndt <- DT::datatable(d,\n                    colnames = c(\" \", \"No. of pupils\", \"Avg Scores\", \"Std Dev\", \"Std Error\")) |> \n  formatRound(columns = c(\"mean\", \"sd\", \"se\"), digits = 2)\n\ncrosstalk::bscols(gg,               \n                  dt, \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3) Visualizing Uncertainty using ggdist\nggdist is an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualizing distributions and uncertainty.\nIt is designed for both frequentist and Bayesian uncertainty visualization, taking the view that uncertainty visualization can be unified through the perspective of distribution visualization:\n\nfor frequentist models, one visualizes confidence distributions or bootstrap distributions (see vignette(“freq-uncertainty-vis”));\nfor Bayesian models, one visualizes probability distributions (see the tidybayes package, which builds on top of ggdist).\n\n\n3.3.1 ) Using stat_pointinterval() of ggdist\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +   #<<\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\nexam %>%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n3.3.2 ) Visualization of 95% and 99% confidence interval with mean\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n  .point = mean,\n  .interval = c(qi(0.95),qi(0.99))) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n3.3.3 ) Visualizing the uncertainty of point estimates: ggdist methods\nUsing stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n3.4) Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\n3.4.1) Getting Started\n\nInstalling ungeviz package\n\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\nLaunch the application in R\n\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-with-r",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-with-r",
    "title": "Hands-on Exercise 4",
    "section": "4) Funnel Plots with R",
    "text": "4) Funnel Plots with R\nFunnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities.\n\n4.1) Getting Started\n\nUsing p_load() of pacman package to load the required libraries\n\n\nFive R packages will be used. They are:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\nImporting data\n\n\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)\n\n\n\n4.2) FunnelPlotR methods\nFunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customization are:\n\nlimit: plot limits (95 or 99).\nlabel_outliers: to label outliers (true or false).\nPoisson_limits: to add Poisson limits to the plot.\nOD_adjust: to add overdispersed limits to the plot. xrange and yrange: to specify the range to display for axes, acts like a zoom function.\nOther aesthetic components such as graph title, axis labels etc.\n\n\n4.2.1) FunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 0 are outliers. Plot is adjusted for overdispersion.\n\n4.2.1.1) Makeover 1\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #<<\n  xrange = c(0, 6500),  #<<\n  yrange = c(0, 0.05)   #<<\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 7 are outliers. Plot is adjusted for overdispersion.\n\n\n4.2.1.2) Makeover 2\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #<<           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #<<\n  y_label = \"Cumulative Fatality Rate\"  #<<\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 7 are outliers. Plot is adjusted for overdispersion.\n\n\n\n\n4.3) FunnelPlotR methods: ggplot2 methods\nTo begin with, we derive cumulative death rate and standard error of cumulative death rate.\nData Preparation\n\ndf <- covid19 %>%\n  mutate(rate = Death / Positive) %>%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %>%\n  filter(rate > 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean <- weighted.mean(df$rate, 1/df$rate.se^2)\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq <- seq(1, max(df$Positive), 1)\nnumber.ll95 <- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 <- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 <- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 <- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI <- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\nPlotting a static funnel plot\n\np <- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nfp_ggplotly <- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Using p_load() of pacman package to load the required libraries\n\n\npacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse) \n\n\nImporting data\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-ggiraph",
    "title": "Hands-on Exercise 3",
    "section": "1) Interactive Data Visualization with ggiraph",
    "text": "1) Interactive Data Visualization with ggiraph\nStudent ID will appear when the mouse hovered to the specific data point.\n\nOutput:\n\np <-ggplot(data=exam_data, \n       aes(x = MATHS)) +\n    geom_dotplot_interactive(\n       aes(tooltip = ID),\n       stackgroups = TRUE, \n       binwidth = 1, \n       method = \"histodot\") +\n       scale_y_continuous(NULL, breaks = NULL)\n    \n    girafe(\n       ggobj = p,\n       width_svg = 6,\n       height_svg = 6*0.618\n             )\n\n\n\n\n\n\n\n1.1) Displaying multiple information with tooltip\nStudent ID and Class will appear when the mouse hovered to the specific data point.\n\nOutput:\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(\n       aes(tooltip = exam_data$tooltip), \n       stackgroups = TRUE,\n       binwidth = 1,\n       method = \"histodot\") +\n       scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(\n       ggobj = p,\n       width_svg = 8,\n       height_svg = 8*0.618\n           )\n\n\n\n\n\n\n\n\n1.2) Customizing tooltip style\nWhen the mouse hovered to the specific data point, the student ID will appear. We will customize the output to black and bold font with white background.\n\nOutput:\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(tooltip = ID),                   \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +               \n       scale_y_continuous(NULL,               \n                     breaks = NULL)\n    girafe(                                  \n      ggobj = p,                             \n      width_svg = 6,                         \n      height_svg = 6*0.618,\n      options = list(    #<<\n      opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n          )                                        \n\n\n\n\n\n\n\n\n1.3) Displaying statistics with tooltip\nWhen the mouse hovered to the specific data point, statistics will appear. In the below output, confidence interval will be displayed at 90% CI.\n\nOutput:\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean Maths Scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),) +\n            stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                  tooltip(y, ymax))),  \n            fun.data = \"mean_se\", \n                  geom = GeomInteractiveCol,  \n                  fill = \"light blue\"\n                  ) +\n           stat_summary(aes(y = MATHS),\n                 fun.data = mean_se,\n                 geom = \"errorbar\", width = 0.2, linewidth = 0.2\n                  )\n\n           girafe(ggobj = gg_point,\n               width_svg = 8,\n               height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n1.4) Hover effect with data_id aesthetic\nWhen the mouse hovered to the specific data point, data points that are associated with the data_id(CLASS) will be highlighted.\n\nOutput:\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(           \n       aes(data_id = CLASS),             \n       stackgroups = TRUE,               \n       binwidth = 1,                        \n       method = \"histodot\") +               \n     scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(                                  \n       ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618                      \n        )                                        \n\n\n\n\n\n\n\n\n1.5) Customizing Hover effect\nSimilar to 1.2, we will customize the Hover Effect with the help of CSS.\n\nOutput:\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(data_id = CLASS),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +               \n     scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(                                  \n       ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618,\n       options = list(                        \n       opts_hover(css = \"fill: #202020;\"),  \n       opts_hover_inv(css = \"opacity:0.2;\") \n           )                                        \n             )                                        \n\n\n\n\n\n\n\n\n1.6) Combining tooltip and Hover Effect\nIn the below output, we will combine both Interactive Data Visualization. The respective data points and the associated points will be reflected.\n\nOutput:\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(tooltip = CLASS, \n       data_id = CLASS),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +               \n     scale_y_continuous(NULL, breaks = NULL)\n     \n     girafe(                                  \n       ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618,\n      options = list(                        \n      opts_hover(css = \"fill: #202020;\"),  \n      opts_hover_inv(css = \"opacity:0.2;\") \n         )                                        \n           )                                        \n\n\n\n\n\n\n\n\n1.7) Click effect with onclick\nIn the below output, a new window will open upon a click (hotlink interactivity)\nNote: Click actions must be a string column\n\nOutput:\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(onclick = onclick),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +               \n     scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(                                  \n       ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n1.8) Coordinated multiple views\nIn the below output, the graph will be interactive. Hovering on one data point will reflect the corresponding data point. We will be using :\n\npatchwork function [use inside girafe function]\nggiraph [use to create multiple views]\n\nNote: data_id aesthetic is critical, tooltip aesthetic is optional\n\nOutput:\n\np1 <- ggplot(data=exam_data, \n        aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(data_id = ID),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +  \n     coord_cartesian(xlim=c(0,100)) + \n     scale_y_continuous(NULL, breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n     geom_dotplot_interactive(              \n       aes(data_id = ID),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") + \n     coord_cartesian(xlim=c(0,100)) + \n     scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n            )\n          )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-plotly",
    "title": "Hands-on Exercise 3",
    "section": "2) Interactive Data Visualization with plotly",
    "text": "2) Interactive Data Visualization with plotly\nThere are two ways to create interactive graph through plotly:\n\nplot_ly()\nggploty()\n\n\n2.1) Create interactive scatter plot with plot_ly() method\nIn the below output, the interactive graph is created through plot_ ly().\n\nOutput:\n\nplot_ly(data = exam_data, \n             x = ~MATHS, y = ~ENGLISH)\n\n\n\n\n\n\n\n\n2.2) Create interactive scatter plot with plot_ly() method\nIn the below output, the interactive graph is enhanced with the addition of RACE as a visual variable.\n\nOutput:\n\nplot_ly(data = exam_data, \n             x = ~MATHS, y = ~ENGLISH, color = ~RACE)\n\n\n\n\n\n\n\n\n2.3) Create interactive scatter plot with ggplotly() method\nIn the below output, the interactive graph is created through ggplotly().\n\nOutput:\nNote: only 1 additional line required (Line 7)\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n     geom_point(size=1) +\n    coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\nggplotly(p)\n\n\n\n\n\n\n\n\n2.4) Coordinated multiple views with plotly\nThe coordinated linked graphs will be achieved in three steps:\n\nUse highlight_key() of plotly as a shared data\nCreate two scatter plots through ggplot2 functions\nSubplot() of plotly package used to place them side by side\n\n\nOutput:\n\nd <- highlight_key(exam_data)\n\np1 <- ggplot(data=d, \n         aes(x = MATHS, y = ENGLISH)) +\n      geom_point(size=1) +\n      coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\np2 <- ggplot(data=d, \n         aes(x = MATHS, y = SCIENCE)) +\n      geom_point(size=1) +\n      coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\nNote to self: patchwork is not interactive in comparion but includes labelling"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-crosstalk-methods",
    "title": "Hands-on Exercise 3",
    "section": "3) Interactive Data Visualization with crosstalk methods",
    "text": "3) Interactive Data Visualization with crosstalk methods\nIt is an add-on to htmlwidgets package with cross-widget interactions.\n\n3.1) Interactive Data Table: DT package\nIn the below output, the interactive data table is created through DT package.\n\nOutput:\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\n3.2) Linked brushing crosstalk method\nIn the below output, the interactive data table is created through DT package.\n\nOutput:\n\nd <- highlight_key(exam_data) \n\np <- ggplot(d, \n       aes(ENGLISH, MATHS)) + \n     geom_point(size=1) +\n     coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualization-with-gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualization-with-gganimate-methods",
    "title": "Hands-on Exercise 3",
    "section": "4) Animated Data Visualization with gganimate methods",
    "text": "4) Animated Data Visualization with gganimate methods\ngganimate is an extension of ggplot2 which includes animation and includes the following:\n\ntransition_() defines how the data should be spread out and how it relates to itself across time.\nview_() defines how the positional scales should change along the animation.\nshadow_() defines how data from other points in time should be presented in the given point in time.\nenter_()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nSource\nPrior to building the graph, we would need to:\n\nUsing p_load() of pacman package to load the required libraries\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\nImporting data\n\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))\n\n\n\n4.1) Building a static population bubble plot\nIn the below output, basic ggplot2 functions are used to create a static bubble plot.\n\nOutput:\n\nggplot(globalPop, \n       aes(x = Old, y = Young, \n       size = Population, \n       colour = Country)) +\n  geom_point(alpha = 0.7, \n       show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n4.2) Building the animation bubble plot\nSimilar to 4.1, the below output will be animated.\n\nOutput:\n\nggplot(globalPop, \n       aes(x = Old, y = Young, \n       size = Population, \n       colour = Country)) +\n  geom_point(alpha = 0.7, \n       show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualization-with-plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualization-with-plotly-methods",
    "title": "Hands-on Exercise 3",
    "section": "5) Animated Data Visualization with plotly methods",
    "text": "5) Animated Data Visualization with plotly methods\nSimilar to section 4, both ggplotly and plotly support animated data visualization.\n\n5.1) Building an animated bubble plot plotly\nIn this sub-section, we will create an animated bubble plot..\n\nOutput:\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "Using p_load() of pacman package to load the required libraries\n\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes,tidyverse) \n\n\nImporting data\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#english-scores-vs-maths-scores-for-primary-3",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#english-scores-vs-maths-scores-for-primary-3",
    "title": "Hands-on Exercise 2",
    "section": "1) English scores vs Maths scores for Primary 3",
    "text": "1) English scores vs Maths scores for Primary 3\n\nOutput:\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n       geom_point() +\n       geom_smooth(method=lm, size=0.5) +  \n       geom_label_repel(aes(label = ID), fontface = \"bold\") +\n       coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n       ggtitle(\"English scores versus Maths scores for Primary 3\") +\n       theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#distribution-of-maths-scores",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#distribution-of-maths-scores",
    "title": "Hands-on Exercise 2",
    "section": "2) Distribution of Maths scores",
    "text": "2) Distribution of Maths scores\n\nOutput:\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n       geom_histogram(bins= 30, color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       theme_grey() + \n       ggtitle(\"Distribution of Maths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n2.1) ggtheme package\n\nThemes here\n\n\nOutput:\n\nggplot(data = exam_data, \n       aes(x=MATHS)) + \n       geom_histogram(bins=30, color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n      theme_economist() +\n       ggtitle(\"Distribution of Maths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n2.2) hrbthems package\n\nThemes here\n\n\nOutput:\n\nggplot(data = exam_data, \n       aes(x=MATHS)) + \n       geom_histogram(bins=20, boundary = 100,  \n       color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       theme_ipsum() +\n       ggtitle(\"Distribution of Maths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n2.2.1) hrbthems package: theme revision\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and,\ngrid argument is used to remove the x-axis grid lines.\n\n\nOutput:\n\nggplot(data = exam_data, \n       aes(x=MATHS)) + \n       geom_histogram(bins=20, boundary = 100,  \n       color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       theme_ipsum(grid = \"y\",axis_title_size = 18, base_size =15) +\n       ggtitle(\"Distribution of Maths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-multiple-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-multiple-graphs",
    "title": "Hands-on Exercise 2",
    "section": "3) Creating multiple graphs",
    "text": "3) Creating multiple graphs\nCreate composite plot by combining multiple graphs. Firstly, to create three statistical graphics.\n\n3.1) Distribution of Maths Scores\n\nOutput:\n\np1 <- ggplot(data = exam_data, \n       aes(x=MATHS)) + \n       geom_histogram(bins=20, boundary = 100,  \n       color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       ggtitle(\"Distribution of \\nMaths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n3.2) Distribution of English Scores\n\nOutput:\n\np2 <- ggplot(data = exam_data, \n       aes(x=ENGLISH)) + \n       geom_histogram(bins=20, boundary = 100,  \n       color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       ggtitle(\"Distribution of \\nEnglish scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n3.3) English scores vs Maths scores for Primary 3\n\nOutput :\n\np3 <- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n       geom_point() +\n       geom_smooth(method=lm, size=0.5) +  \n       coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n       ggtitle(\"English scores vs Maths \\nscores for Primary 3\") +\n       theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-multiple-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-multiple-graphs",
    "title": "Hands-on Exercise 2",
    "section": "4) Plotting multiple graphs",
    "text": "4) Plotting multiple graphs\nPoint to note:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\n\nTwo-Row Layout using the Division Sign /\n\nSource\n\n\n4.1) Combine 3.1 and 3.2\nIn this output, we will combine Distribution of Maths Scores and Distribution of English Scores.\n\nOutput :\n\np1 + p2\n\n\n\n\n\n\n\n4.2) Combine 3.1, 3.2, and 3.3\nPoint to note:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nSource\nIn this output, we will combine Distribution of Maths Scores, Distribution of English Scores, and English scores vs Maths scores for Primary 3 by stacking 3.1 and 3.2 on the left and 3.3 on the right.\n\n\nOutput :\n\np1 / p2 | p3\n\n\n\n\n\n\n\n4.3) Insert 3.2 into 3.3\nIn this output, we will insert Distribution of English Scores on top of English scores vs Maths scores for Primary 3.\n\nOutput :\n\np3 + inset_element(p2, left = 0.02, bottom = 0.6, right = 0.4, top = 1)\n\n\n\n\n\n\n\n4.4) Add patchwork and ggtheme to 4.2\nIn this output, we will add patchwork and ggtheme.\n\nOutput :\n\npatchwork <- p1 / p2 | p3\npatchwork & theme_economist(base_size = 15)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "Using p_load() of pacman package to load the required libraries\n\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\nImporting data\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n2.1 Reviewing imported data\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reformat-date-using-lubridate",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reformat-date-using-lubridate",
    "title": "Hands-on Exercise 5",
    "section": "1.1 Reformat Date using lubridate",
    "text": "1.1 Reformat Date using lubridate\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\nGAStech_edges\n\n# A tibble: 9,063 × 10\n   source target SentDate SentTime Subject   MainSubject sourceLabel targetLabel\n    <dbl>  <dbl> <chr>    <time>   <chr>     <chr>       <chr>       <chr>      \n 1     43     41 6/1/2014 08:39    GT-Seism… Work relat… Sven.Flecha Isak.Baza  \n 2     43     40 6/1/2014 08:39    GT-Seism… Work relat… Sven.Flecha Lucas.Alca…\n 3     44     51 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Felix.Resu…\n 4     44     52 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Hideki.Coc…\n 5     44     53 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Inga.Ferro \n 6     44     45 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Varja.Lagos\n 7     44     44 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Kanon.Herr…\n 8     44     46 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Stenig.Fus…\n 9     44     48 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Hennie.Osv…\n10     44     49 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Isia.Vann  \n# ℹ 9,053 more rows\n# ℹ 2 more variables: SendDate <date>, Weekday <ord>\n\n\n\nboth dmy() and wday() are functions of lubridate package. lubridate is an R package that makes it easier to work with dates and times.\ndmy() transforms the SentDate to Date data type.\nwday() returns the day of the week as a decimal number or an ordered factor if label is TRUE. The argument abbr is FALSE keep the daya spells in full, i.e. Monday. The function will create a new column in the data.frame i.e. Weekday and the output of wday() will save in this newly created field.\nthe values in the Weekday field are in ordinal scale.\n\nSource"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-attributes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-attributes",
    "title": "Hands-on Exercise 5",
    "section": "1.2 Wrangling Attributes",
    "text": "1.2 Wrangling Attributes\nGAStech_edges data.frame consists of individual e-mail flow records which is not very useful. We will aggregate the individual by date, senders, receivers, main subject and day of the week.\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\nGAStech_edges_aggregated\n\n# A tibble: 1,372 × 4\n   source target Weekday   Weight\n    <dbl>  <dbl> <ord>      <int>\n 1      1      2 Sunday         5\n 2      1      2 Monday         2\n 3      1      2 Tuesday        3\n 4      1      2 Wednesday      4\n 5      1      2 Friday         6\n 6      1      3 Sunday         5\n 7      1      3 Monday         2\n 8      1      3 Tuesday        3\n 9      1      3 Wednesday      4\n10      1      3 Friday         6\n# ℹ 1,362 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "title": "Hands-on Exercise 5",
    "section": "2.1 Using tbl_graph() to build tidygraph data model",
    "text": "2.1 Using tbl_graph() to build tidygraph data model\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges.\nThe command also prints the first six rows of “Node Data” and the first three of “Edge Data”.\nIt states that the Node Data is active. The notion of an active tibble within a tbl_graph object makes it possible to manipulate the data in one tibble at a time."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "title": "Hands-on Exercise 5",
    "section": "2.2 Changing the active object",
    "text": "2.2 Changing the active object\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "City of Engagement is a small city located at Country of Nowhere, with a total population of 50,000, serving as an agriculture region. The local council of the city is in the midst of preparing the Local Plan 2023.\n\n\nIn this take-home exercise, patterns containing demographics and financial characteristics of residents in City of Engagement will be unveiled using appropriate static and interactive statistical graphics methods."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#metadata",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#metadata",
    "title": "Take Home Exercise 1",
    "section": "2.1 Metadata",
    "text": "2.1 Metadata\n\n\n\n\n\n\n\n\nFile\nVariables Name\nDescription\n\n\n\n\nparticipants.csv\nFinancialJourval.csv\nparticipantId\nUnique identification to represent the Participants\n\n\nparticipants.csv\nhouseholdSize\nRepresents the number of people in the household\n\n\nparticipants.csv\nhaveKids\nBinary value (True/False) indicating if participant have a kid(s)\n\n\nparticipants.csv\nage\nRepresents age of the participant\n\n\nparticipants.csv\neducationLevel\nRepresents the highest education attained by participant\n\n\nFinancialJourval.csv\ninterestGroup\nRepresents the group associated with the participant\n\n\nFinancialJourval.csv\njoviality\nRepresents the level of happiness by participant at the start of the survey\n\n\nFinancialJourval.csv\ntimestamp\nRepresents the date and time the entry was inputted\n\n\nFinancialJourval.csv\ncategory\nRepresents the type of income/expenses incurred at a given timestamp\n\n\nFinancialJourval.csv\namount\nRepresents the amount received ( + income), amount paid ( - expenses )"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#install-r-packages",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#install-r-packages",
    "title": "Take Home Exercise 1",
    "section": "3.1 Install R-packages",
    "text": "3.1 Install R-packages\nUsing p_load() of pacman package to load and install the following libraries:\n\nggiraph : For creating interactive ‘ggplot’ graphics\nplotly : For creating interactive statistical graphs\npatchwork : For combining multiple ggplot2 graphs into one figure\ntidyverse : A collection of R packages use in everyday data analyses. It is able to support data science, data wrangling, and analysis.\nknitr: For dynamic report generation\nggstatsplot: For creating graphics with details from statistical tests included and its plot\npaletteer: Collection of color palettes\nwesanderson: Wes Anderson’s theme Palette Generator\nscales: For customizing the appearance of axis and legend labels\npng: For reading, writing, and displaying bitmap imaged in PNG format\nnortest: For normality test\nwebshot2: For taking screenshot of web pages\nrstatix: For performing statistical tests and correlation analyses\ngt : For constructing of table\nstats : For statistical calculations\ngridExtra: For arranging multiple grid-based plot on a page, and draw tables\nggpubr: For creating and customizing ‘ggplot2’ based plots\nggdist: For visualization of distributions and uncertainty\n\n\npacman::p_load(ggiraph, plotly, patchwork, tidyverse,\n               knitr,ggstatsplot,paletteer,wesanderson,\n               scales, ggpubr, rstatix,gt,webshot2,\n               png,nortest, stats, gridExtra,ggdist)\n\noptions(scipen = 999)\n\n\n\n\n\n\n\nTip\n\n\n\noptions(scipen = 999) : removes scientific notation in our exercise."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#import-data",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#import-data",
    "title": "Take Home Exercise 1",
    "section": "3.2 Import Data",
    "text": "3.2 Import Data\n\n3.2.1 Import participants dataset\n\nparticipants <- read_csv(\"data/Participants.csv\")\n\n\n\n3.2.2 Load participants\n\nData TableCode\n\n\n\n\n# A tibble: 6 × 7\n  participantId householdSize haveKids   age educationLevel      interestGroup\n          <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n1             0             3 TRUE        36 HighSchoolOrCollege H            \n2             1             3 TRUE        25 HighSchoolOrCollege B            \n3             2             3 TRUE        35 HighSchoolOrCollege A            \n4             3             3 TRUE        21 HighSchoolOrCollege I            \n5             4             3 TRUE        43 Bachelors           H            \n6             5             3 TRUE        32 HighSchoolOrCollege D            \n# ℹ 1 more variable: joviality <dbl>\n\n\n\n\n\nhead(participants)\n\n\n\n\n\n\n3.2.3 Import Financial Journal dataset\n\nfinancial_journal <- read_csv(\"data/FinancialJournal.csv\")\n\n\n\n3.2.4 Load Financial Journal\n\nData TableCode\n\n\n\n\n# A tibble: 6 × 4\n  participantId timestamp           category  amount\n          <dbl> <dttm>              <chr>      <dbl>\n1             0 2022-03-01 00:00:00 Wage      2473. \n2             0 2022-03-01 00:00:00 Shelter   -555. \n3             0 2022-03-01 00:00:00 Education  -38.0\n4             1 2022-03-01 00:00:00 Wage      2047. \n5             1 2022-03-01 00:00:00 Shelter   -555. \n6             1 2022-03-01 00:00:00 Education  -38.0\n\n\n\n\n\nhead(financial_journal)"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "title": "Take Home Exercise 1",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\nAs seen from the two data tables above, there are some issues that could be rectify. Henceforth, the following adjustments are made:\n3.3.1 participants.csv :\n\nparticipantId is a <dbl> variable. (Rectify by reformatting it to <chr>)\nhouseholdSize is a <dbl> variable. (Revised to <ord> for the order of categories)\nage is a continuous variable which makes it harder to visualize the demographics (Create a new column with 5-class variables after determining the youngest and oldest demographics.)\n\n\n\nShow the code\n#check min and max age of residents in COE. \nmin(participants$age)\n\n\n[1] 18\n\n\nShow the code\nmax(participants$age)\n\n\n[1] 60\n\n\n\neducationLevel is a <chr> variable. (Revised to <ord> for the order of categories)\njoviality has nine decimal places. (Rectify by rounding it to 2.d.p and create new 5-class variables for future analysis)\n\n\n\nShow the code\n#create new dataset \nparticipants_new <- participants %>%\n    mutate(\n          participantId = as.character(participantId),\n          #binned joviality to 5-class variables \n          joviality_bins = cut(joviality, breaks = c(0.0,0.2,0.4,0.6,0.8,1.0))\n          )\n\n#reformat householdSize to Ordinal \n    participants_new$householdSize <- factor(participants$householdSize,\n                                      levels = c(\"1\", \"2\", \"3\"), \n                                      ordered = TRUE) \n#reformat age group \nparticipants_new$age_group <- factor(ifelse(participants$age < 20, \"Under 20\",\n                ifelse(participants$age < 30, \"20-29\",\n                    ifelse(participants$age < 40, \"30-39\",\n                      ifelse(participants$age < 50, \"40-49\", \"Above 50\")))),\n                levels = c(\"Under 20\", \"20-29\", \"30-39\", \"40-49\", \"Above 50\"),\n                ordered= TRUE)\n\n#reformat education level to Ordinal \nparticipants_new$educationLevel <- factor(participants$educationLevel, \n                                      levels = c(\"Low\", \"HighSchoolOrCollege\", \n                                                 \"Bachelors\", \"Graduate\"\n                                                 ), \n                                      ordered = TRUE)  \n\n#round up joviality to 2 decimal places \nparticipants_new$joviality <- round(participants$joviality, 2) \n\n#output data frame\nparticipants_new\n\n\n# A tibble: 1,011 × 9\n   participantId householdSize haveKids   age educationLevel      interestGroup\n   <chr>         <ord>         <lgl>    <dbl> <ord>               <chr>        \n 1 0             3             TRUE        36 HighSchoolOrCollege H            \n 2 1             3             TRUE        25 HighSchoolOrCollege B            \n 3 2             3             TRUE        35 HighSchoolOrCollege A            \n 4 3             3             TRUE        21 HighSchoolOrCollege I            \n 5 4             3             TRUE        43 Bachelors           H            \n 6 5             3             TRUE        32 HighSchoolOrCollege D            \n 7 6             3             TRUE        26 HighSchoolOrCollege I            \n 8 7             3             TRUE        27 Bachelors           A            \n 9 8             3             TRUE        20 Bachelors           G            \n10 9             3             TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 3 more variables: joviality <dbl>, joviality_bins <fct>, age_group <ord>\n\n\n3.3.2 FinancialJourval.csv :\n\nSimilar issue as point 1 above.\nTimestamp is a <POSIX> variable. (Rectify by reformatting it to <chr> in year-mth format)\nAs per the code below, there are duplicate entries in the financial journal. (Rectify by using the distinct() function from [dplyr package] in tidyverse)\n\n\n\nShow the code\n#check for duplicates \ndup <- (nrow(financial_journal) - nrow(unique(financial_journal)))\n#reformat output \ndup_reformat <- format(dup, big.mark=\",\")\n#print output\ndup_reformat\n\n\n[1] \"1,113\"\n\n\n\n“Category” is not very useful. (Rectify by using pivot_wider() function from [tidyr package] to transpose)\n\n\n\nShow the code\n    #remove duplicate rows for all columns\n    financial_journal_lessdup <- financial_journal %>% \n      distinct()\n\n    #create new dataset \n    grouped_data <- financial_journal_lessdup %>%\n      \n    #recode participantId from dbl to chr, format timestamp to year_mth and round amount \n        mutate(participantId = as.character(participantId),\n             year_mth = format(as.Date(financial_journal_lessdup$timestamp), \"%Y-%m\"),\n             amount = abs(round(amount,2)),\n             .before = 3) %>%\n      \n    #group the columns in the following order and sum the amount to total_amount\n      group_by( participantId, year_mth,category) %>%\n      summarize(total_amount = sum(amount)) \n\n    # pivot the data frame to have categories as columns\n    pivoted_fj <- grouped_data %>%\n      pivot_wider(names_from = \"category\", \n                  values_from = \"total_amount\", values_fill = 0)\n\n    # create new column from list of categories\n    pivoted_fj$Shelter_new <- pivoted_fj$Shelter + pivoted_fj$RentAdjustment\n    pivoted_fj$Expenses <- pivoted_fj$Education + pivoted_fj$Food +  \n    pivoted_fj$Recreation + pivoted_fj$Shelter + pivoted_fj$RentAdjustment\n    pivoted_fj$Income <- pivoted_fj$Wage\n    pivoted_fj$Cashflow <- pivoted_fj$Income - pivoted_fj$Expenses\n\n    # output the pivoted data frame\n    pivoted_fj %>%\n      select(c(1:5,7,9:12))\n\n\n# A tibble: 10,691 × 10\n# Groups:   participantId, year_mth [10,691]\n   participantId year_mth Education  Food Recreation   Wage Shelter_new Expenses\n   <chr>         <chr>        <dbl> <dbl>      <dbl>  <dbl>       <dbl>    <dbl>\n 1 0             2022-03       38.0  268.      349.  11932.        555.    1210.\n 2 0             2022-04       38.0  266.      219.   8637.        555.    1078.\n 3 0             2022-05       38.0  265.      383.   9048.        555.    1241.\n 4 0             2022-06       38.0  257.      466.   9048.        555.    1316.\n 5 0             2022-07       38.0  270.     1069.   8637.        555.    1933.\n 6 0             2022-08       38.0  262.      314.   9459.        555.    1169.\n 7 0             2022-09       38.0  256.      295.   9048.        555.    1144.\n 8 0             2022-10       38.0  267.       25.0  8637.        555.     885.\n 9 0             2022-11       38.0  261       377.   9048.        555.    1231.\n10 0             2022-12       38.0  266.      357.   9048.        555.    1216.\n# ℹ 10,681 more rows\n# ℹ 2 more variables: Income <dbl>, Cashflow <dbl>\n\n\n\nType of Income/Expenses are all labelled in a column. (Create new columns)\n\n\n\n\n\n\n\n\nData Table\nVariables Name\nDescription\n\n\n\n\nresident_profile_rev\nIncome\nCategory :Wage\n\n\nresident_profile_rev\nExpenses\nCategory: Education + Recreation + Food + Shelter_new (Shelter + RentAdjustment)\n\n\nresident_profile_rev\nCashflow\nNEW : Income - Expenses\n\n\n\nMultiple zero values for RentAdjustment. As seen from the data frame above and the code chunk below, there are only 72 rows. Thus, it will be combined with Shelter.\n\n\ncolSums(pivoted_fj[-1] !=0)\n\n      year_mth      Education           Food     Recreation        Shelter \n         10691           3018          10691           9492          10560 \n          Wage RentAdjustment    Shelter_new       Expenses         Income \n         10691             72          10560          10691          10691 \n      Cashflow \n         10691"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#interactive-dashboard",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#interactive-dashboard",
    "title": "Take Home Exercise 1",
    "section": "4.1 Interactive Dashboard",
    "text": "4.1 Interactive Dashboard\nA dashboard is created to provide an overview of the demographics of residents in City of Engagement across age group. Bar chart is chosen to show segments of information by comparing different categorical variables. A design layout is included in the code to better visualized the output through patchwork. Moreover, tooltip is used to highlight the specific age group at the point of the data.\n\n\nShow the code\n#Create new df by doing a full join with participants_counts\nparticipants_new_rev <- full_join(\n  participants_new, participant_counts, \n  by = c(\"participantId\" = \"participantId\"))  %>%\n  group_by(participantId) %>%\n  #participants_counts contains the number of months the participants entries are in\n  ungroup() %>%\n  #filter away participantsId who do not have entries for the full year\n  filter(num_months == 12) %>%\n  select(-num_months)\n\n#create tooltip to display age group \nparticipants_new_rev$tooltip <-c(paste0(\n  \"Age Group:\", participants_new_rev$age_group))\n\n#Bar chart for resident's age distribution\np1 <- ggplot(data= participants_new_rev,\n      aes(x = age_group)) +\n      geom_bar_interactive(aes(tooltip = participants_new_rev$tooltip, \n                               stackgroups = TRUE,\n                               data_id= age_group)) + \n      scale_fill_manual(values = wes_palette(\"Chevalier1\")) +\n      xlab(\"Age Group\") +\n      ylab(\"No. of participants\") +\n      theme(axis.text.x=element_text(size=5)) +\n      theme(axis.title.y=element_text(size=10)) +\n      ylim(0,250)\n\n#Bar chart for resident's household size distribution\np2 <- ggplot(data= participants_new_rev,\n      aes(x = householdSize)) +\n      geom_bar_interactive(aes(tooltip = participants_new_rev$tooltip, \n                               stackgroups = TRUE,\n                               data_id= age_group)) +\n      scale_fill_manual(values = wes_palette(\"Chevalier1\")) +\n      xlab(\"Size of Household\") +\n      ylab(\"\") +\n      theme(axis.text.x=element_text(size=5)) +\n      theme(axis.title.y=element_text(size=10)) +\n      ylim(0,350)\n\n\n#Bar chart for resident's education level\np3 <- ggplot(data= participants_new_rev,\n      aes(x = educationLevel)) +\n      geom_bar_interactive(aes(tooltip = participants_new_rev$tooltip, \n                               stackgroups = TRUE,\n                               data_id= age_group)) +\n      xlab(\"Education Level\") +\n      ylab(\"\") +\n      theme(axis.text.x=element_text(size=5)) +\n      theme(axis.title.y=element_text(size=10)) +\n      ylim(0,350)\n\n#Bar chart to visualize if residents have kids \np4 <- ggplot(data= participants_new_rev,\n      aes(x = haveKids)) +\n      geom_bar_interactive(aes(tooltip = participants_new_rev$tooltip, \n                               stackgroups = TRUE,\n                               data_id= age_group)) +\n      ylab(\"\") +\n      theme(axis.text.x=element_text(size=5)) +\n      theme(axis.title.y=element_text(size=10)) +\n      ylim(0,400)\n\n#Bar chart for residents' interest group \np5 <- ggplot(data= participants_new_rev,\n      aes(x = interestGroup)) +\n      geom_bar_interactive(aes(tooltip = participants_new_rev$tooltip, \n                               stackgroups = TRUE,\n                               data_id= age_group)) +\n      xlab(\"Interest Group\") +\n      ylab(\"No. of participants\") +\n      theme(axis.text.x=element_text(size=5)) +\n      theme(axis.title.y=element_text(size=10)) +\n      ylim(0,120)\n\n#Bar chart for residents' joviality in bins \np6 <- ggplot(data= participants_new_rev,\n      aes(x = joviality_bins)) +\n      geom_bar_interactive(aes(tooltip = participants_new_rev$tooltip, \n                               stackgroups = TRUE,\n                               data_id= age_group)) +\n      xlab(\"Joviality\") +\n      ylab(\"No. of participants\") +\n      theme(axis.text.x=element_text(size=5)) +\n      theme(axis.title.y=element_text(size=10)) +\n      ylim(0,250)\n\n#design layout for the patchwork figure\ndesign <- \"\n  132\n  132\n  554\n  554\n  666\n  666\n\"\n\ngirafe(code = print(p1 + p2 + p3 + p4 + p5  + p6 +\n                      plot_layout(design = design,) + \n                      plot_annotation(title = \n                    \"Demographics Insights of residents in City of Engagement\",\n                     theme = theme(plot.title = element_text(size = 20, hjust=0.5))\n                      )), \n       width_svg = 12,\n       height_svg = 6,\n       options = list(\n         opts_hover(css = \"fill: #02401B;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\nObservations:\n\nThe city might be facing an aging population as age group is left-skewed.\nLow interest for future education as education level is right-skewed.\nSmall family size with higher proportion of participants of not having Kids.\nUniformly distributed Interest Group. No preference among age group.\nJoviality level seems to be decreasing at a decreasing rate\n\n\n\n\n\n\n\nInteractivity\n\n\n\nClick on the graph and hover around each demographics.\nThe respective age group will be displayed."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#financial-health-of-participants",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#financial-health-of-participants",
    "title": "Take Home Exercise 1",
    "section": "4.2 Financial Health of Participants",
    "text": "4.2 Financial Health of Participants\nTo know more about the financial health of the participants, interactive geom_point is used to plot against the time period. tooltip is included to create a snapshot of the financial health status of the participants at the time period.\nscale_color_manual of [ggplot2] is used to differentiate between positive and negative cash flow. In addition, the plot contains hover effect with the use of data_id aesthetic to highlight the trend of the participant’s cash flow.\n\n\nShow the code\n#tooltip output to display ID, Cashflow, Income, and Expenses\nresident_profile_rev$tooltip <- paste0(\n  \"Participant's ID = \", resident_profile_rev$participantId,\n  \"\\n Cashflow = \", format(resident_profile_rev$Cashflow, big.mark = \",\"),\n  \"\\n Income = \", format(resident_profile_rev$Income, big.mark = \",\"),\n  \"\\n Expenses = \", format(resident_profile_rev$Expenses, big.mark = \",\")\n                                  )\n#tool_tip design\ntooltip_css <- \"background-color: lightgrey; #<<\nfont-style:bold; color: #446455;\" #<<\n\nie <-  ggplot(data=resident_profile_rev) +\n       geom_point_interactive(aes(x = year_mth, y = Cashflow,\n                                   tooltip = resident_profile_rev$tooltip,\n                                   data_id = participantId,\n                                   #if Cashflow >0 = Green, else Red\n                                   color = ifelse(Cashflow >= 0, \n                                                  \"Above 0\", \"Below 0\")\n                                   )) +\n        scale_color_manual(values = c(\"Above 0\" = \"#446455\", \n                                      \"Below 0\" = \"#C93312\")) +\n        #remove legend title \n      labs(color = \"\") +\n      labs(title=\"Financial Health of Participants from Mar 2022 to Feb 2023\") +\n      ylab(\"Cashflow ($)\") + xlab(\"Year-month\") +  \n      scale_y_continuous(labels = comma_format()) +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n      theme_minimal()        |>\n\ngirafe(                                  \n  ggobj = ie,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list( #<<\n    opts_tooltip(css = tooltip_css), #<<\n    opts_hover_inv(css = \"opacity:0.1;\") #<<\n  )                                        \n)   \n\n\n\n\n\n\nObservations:\n\nMajority of participants have positive cash flow (Good Credit Rating)\nNegligible growth on cash flow\nNo drastic changes in participant’s cash flow over time"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#expenses-incurred-by-residents",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#expenses-incurred-by-residents",
    "title": "Take Home Exercise 1",
    "section": "4.1 Expenses incurred by Residents",
    "text": "4.1 Expenses incurred by Residents\n\n\nShow the code\n#to reformat partcipantId, create year-mth, round off amount to 2.d.p\nfinancial_journal_lessdup <- financial_journal_lessdup %>%\n  mutate(participantId = as.character(participantId),\n        year_mth = format(as.Date(financial_journal_lessdup$timestamp), \"%Y-%m\",\n        amount = abs(round(amount,2)),\n        .before = 1)) \n\n#Create new df by doing a full join with participants_counts\nfinancial_journal_lessdup_lessentries <- full_join(\n  financial_journal_lessdup, participant_counts, \n  by = c(\"participantId\" = \"participantId\"))  %>%\n  group_by(participantId) %>%\n  #participants_counts contains the number of months the participants entries are in\n  mutate(num_months = n_distinct(year_mth)) %>%\n  ungroup() %>%\n  #filter away participantsId who do not have entries for the full year\n  filter(num_months == 12) %>%\n  select(participantId, year_mth, category,amount)\n\n#create another df to group by year_mth, category\ngrouped_data_rev <- financial_journal_lessdup_lessentries %>%\n  #group the columns in the following order \n  group_by(year_mth, category) %>%\n  summarize(total_amount = sum(amount)) \n\n#creating interactive graph\nplot_ly(data = grouped_data_rev, \n  x = ~year_mth, y = ~total_amount, color = ~category,\n  type = 'scatter', mode = 'line',\n  hovertemplate = ~paste(\"Year-Month:\", year_mth,\n                         \"<br>Amount:\", format(total_amount, big.mark = \",\"))) |>\n\n#Configure title and axes\n  layout(title = \"Amount earned/incurred by participant\",\n         xaxis = list(title = \"Time Period\"),\n         yaxis = list(title = \"Amount\"))\n\n\n\n\n\n\n(we removed 2,626 rows of partcipants who do not have entries for the full year )\nObservations:\n\nAge."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#spending-patterns-of-participants",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#spending-patterns-of-participants",
    "title": "Take Home Exercise 1",
    "section": "4.2 Spending patterns of participants",
    "text": "4.2 Spending patterns of participants\n\n\nShow the code\n#create a new dataset\ngrouped_data_rev_new <- financial_journal_lessdup_lessentries %>%\n  mutate(amount = abs(round(amount,2))) %>%\n  #group the columns in the following order \n  group_by(category,year_mth) %>%\n  summarize(total_amount = sum(amount)) \n\n# Filter out \"Wage\" category from the data frame\ngrouped_data_rev_newest <- grouped_data_rev_new %>% \n   filter(category != \"Wage\")\n\n#creating interactive graph\nplot_ly(data = grouped_data_rev_newest, \n  x = ~year_mth, y = ~total_amount, color = ~category,\n  type = 'scatter', mode = 'line',\n  hovertemplate = ~paste(\"Year-Month:\", year_mth,\n                         \"<br>Amount:\", format(total_amount, big.mark = \",\"))) |>\n\n#Configure title and axes\n  layout(title = \"Total Expenses incurred by partcipants \\nin City of Engagement from Mar 2022 - Feb 2023\",\n         xaxis = list(title = \"Time Period\"),\n         yaxis = list(title = \"Total Expenses\"))\n\n\n\n\n\n\nObservations:\n\nAge."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#chi-square-test-for-age-group-and-education-level",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#chi-square-test-for-age-group-and-education-level",
    "title": "Take Home Exercise 1",
    "section": "4.3 Chi-square test for Age group and Education Level",
    "text": "4.3 Chi-square test for Age group and Education Level\n\nggbarstats(data = resident_profile_rev, \n           x = educationLevel, y = age_group,\n           package = \"wesanderson\", palette = \"Chevalier1\"\n           )"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#differences-in-joviality-based-on-education-level",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#differences-in-joviality-based-on-education-level",
    "title": "Take Home Exercise 1",
    "section": "5.2 Differences in Joviality based on Education Level",
    "text": "5.2 Differences in Joviality based on Education Level\nAs defined earlier, Joviality indicates the participant’s overall happiness at the start of the study. We will like to found out if there is a difference in Joviality based on Education Level. Before testing our hypothesis, we will perform a normality assumption test at 95% confidence level.\n\n4.4.1 Normality Assumption Test\nNormal Quantile Plot (QQ Plot). For a normally distributed data values, the dot points should be with the 95% envelope or scatter very closely to the slope line in between the two envelopes lines. From the data visualization above, we can visually confirmed that the observed values failed to conform to the normality assumption.\nAt 95% confidence level:\nHo: the observed distribution resembles normal distribution\nH1: the observed distribution failed to resemble normal distribution\nWe failed to reject the Ho if p-value is above the alpha value of 0.05.\nWe reject Ho if p-value is <0.05.\nGiven that normality is not assumed, we will use the non-parametric test such as Wilcoxon test statistics.\n\n\nShow the code\n#Anderson-Darling normality test\nad_test <- ad.test(resident_profile_rev$joviality)\n\n# QQ plot\nqq <- ggplot(data = resident_profile_rev, \n             aes(sample = joviality)) +\n      stat_qq() +\n      stat_qq_line() \n      \n\n# Create a data frame with ad_test result\ntable_data <- data.frame(\n  Test = \"Anderson-Darling\",\n  Statistic = ad_test$statistic,\n  p_value = ad_test$p.value\n  )\n\n# Save plot and table as png image\npng(\"qq_plot_with_table.png\", width = 1200, height = 600, units = \"px\")\ngrid.arrange(qq, tableGrob(table_data), nrow = 1, \n             top = text_grob(\"Normality Quantile Plot with Anderson-Darling Normality Test\", size =20))\n\n#display output using knitr \nknitr::include_graphics(\"qq_plot_with_table.png\")\n\n\n\n\n\n\nggplot(data=resident_profile_rev,\n       aes(sample = joviality)) + \n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n#  ggplot(data = resident_profile_rev,\n#         aes(x= joviality)) + \n#  geom_histogram(bins=10) +\n#  xlab(\"Joviality\") +\n#  ylab(\"No.of Residents\") +\n#  geom_vline(aes(xintercept = average_joviality), col =\"red\", linewidth=1 ) +\n#  annotate(\"text\", x=0.37, y= 1400, label=\"Average Joviality:\", size=4, color = \"red\") +    annotate(\"text\", x=0.37, y= 1300, label=format(average_joviality, big.mark=\",\"), size=4, color = \"red\") \n#  geom_vline(aes(xintercept = median_joviality), col =\"green\", linewidth=1 ) \n\nBased on the result above, we concluded that there is enough statistical evidence to reject the null hypothesis. Since the p-values fall below (p < 0.05), normality is not assumed. Henceforth, we will use the Kruskal-Wallis test.\n\n\n4.4.2 Kruskal-Wallis Test for Joviality across Education Level\nWe will test the following hypothesis at 95% Confidence Level:\nHo : the median Joviality across different education level is the same\nH1: the median Joviality across different education level is not the same\n\n\nShow the code\nggbetweenstats(data = resident_profile_rev,\n       x= educationLevel, y= joviality, type =\"np\",\n       xlab= \"Education Level\", ylab = \"Joviality\",\n       title = \"Comparison of Joviality across Education Level\",\n       pairwise.comparisons = TRUE, pairwise.display =\"ns\", conf.level = 0.95,\n       package = \"wesanderson\", palette = \"Chevalier1\"\n       )\n\n\n\n\n\nAs seen above, the P-value is lower than the 0.05. As such, there is enough statistical evidence to reject the null hypothesis that the median joviality across education level is the same.\nAdditionally, we want to find out if there any distinct similarities between the district. Through the graph above, we discovered that not all pair comparison are statistically significant. The pair (Low and HighSchoolOrCollege) is not statistically significant with a P-value of 0.14, which is greater than 0.05. Thus, we cannot reject the null hypothesis that there is not differences between the joviality level between the pair."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#association-between-age-group-and-joviality",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#association-between-age-group-and-joviality",
    "title": "Take Home Exercise 1",
    "section": "4.5 Association between Age group and Joviality",
    "text": "4.5 Association between Age group and Joviality\nWe discovered that there is a statistical difference in joviality across Education Level, we would like to examine if the same applies and if there is an association between the age group. As Joviality is a continuous variable, we used mutate from dplyr to split it into 5-class variables, with each range at 20%.\nAt 95% confidence level,\nHo : No association exists between the age group and joviality level\nH1: Association exists between the age group and joviality level\n\nggbarstats(data = resident_profile_rev, \n           x = joviality_bins, y = age_group,\n          title = \"Comparison of Joviality across age-group\",\n          pairwise.comparisons = TRUE, pairwise.display =\"s\", conf.level = 0.95,\n          package = \"wesanderson\", palette = \"Chevalier1\"\n           )"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#residents-financial-health",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#residents-financial-health",
    "title": "Take Home Exercise 1",
    "section": "5.1 Resident’s Financial Health",
    "text": "5.1 Resident’s Financial Health\n\n\nShow the code\n#tooltip output to display ID, Cashflow, Income, and Expenses\nresident_profile$tooltip <- paste0(\n  \"Participant's ID = \", resident_profile$participantId,\n  \"\\n Cashflow = \", format(resident_profile$Cashflow, big.mark = \",\"),\n  \"\\n Income = \", format(resident_profile$Income, big.mark = \",\"),\n  \"\\n Expenses = \", format(resident_profile$Expenses, big.mark = \",\")\n                                  )\n#tool_tip design\ntooltip_css <- \"background-color: lightgrey; #<<\nfont-style:bold; color: #446455;\" #<<\n\nie <-  ggplot(data=resident_profile) +\n       geom_point_interactive(aes(x = year_mth, y = Cashflow,\n                                   tooltip = resident_profile$tooltip,\n                                   data_id = participantId,\n                                   #if Cashflow >0 = Green, else Red\n                                   color = ifelse(Cashflow >= 0, \n                                                  \"Above 0\", \"Below 0\")\n                                   )) +\n        scale_color_manual(values = c(\"Above 0\" = \"#446455\", \n                                      \"Below 0\" = \"#C93312\")) +\n        #remove legend title \n      labs(color = \"\") +\n      labs(title=\"Financial Health of Participants from Mar 2022 to Feb 2023\") +\n      ylab(\"Cashflow ($)\") + xlab(\"Year-month\") +  \n      scale_y_continuous(labels = comma_format()) +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n      theme_minimal()        |>\n\ngirafe(                                  \n  ggobj = ie,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list( #<<\n    opts_tooltip(css = tooltip_css), #<<\n    opts_hover_inv(css = \"opacity:0.1;\") #<<\n  )                                        \n)   \n\n\n\n\n\n\n\n\n\n\n\n\nUpdate\n\n\n\n7 rows have been excluded in the graph"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#differences-in-joviality-across-income",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#differences-in-joviality-across-income",
    "title": "Take Home Exercise 1",
    "section": "5.2 Differences in joviality across income",
    "text": "5.2 Differences in joviality across income\nWe want to find out if there are any differences in joviality across income.\nThe following considerations have been made:\n\nassume income increases over the years\nopacity included to highlight the contrast\nTooltip to indicate variables\n\nparticipantID\nIncome\nCashflow\n\n\nWe will be using plot_ly for the interactive graph.\n\nplot_ly(data = resident_profile_rev, \n             x = ~joviality, y = ~Income,\n        hovertemplate = ~paste(\"<br>Participant's ID:\",participantId,\n                               \"<br>Cashflow:\", Cashflow,\n                              \"<br>Income:\", Income,\n                               \"<br>Expenses:\", Expenses),\n             \n            type = \"scatter\",\n            mode = \"markers\",\n            marker = list(opacity = 0.7,sizemode = \"diameter\", \n                          line = list(width =0.1, color = \"white\"))) |>\n\n#add title and labels to axis \n        layout(title = \"Interactive scatterplot of Income vs Joviality\" ,\n         xaxis = list(title = \"Joviality level\") ,\n         yaxis = list(title = \"Income\"))\n\n\n\n\n\nObservations:\n\nWhen income exceeds $15k, joviality level decreases\nit is similar to income range of $10-$15k where majority have low joviality\nJoviality level are more spread out when income range below $5k\n\n\n\n\n\n\n\nNote\n\n\n\nHappiness level of joviality ranges from 0 to 1. A score of 0.4 indicates that participant is dull while a score of 0.8 indicates joy.\n\n\n\nfj_cat <- financial_journal_lessdup %>%\n  \n#recode ID from dbl to chr, year_mth\n    mutate(participantId = as.character(participantId),\n         year = format(as.Date(financial_journal_lessdup$timestamp), \"%Y\"),\n         mth = format(as.Date(financial_journal_lessdup$timestamp), \"%m\"),\n         amount = abs(round(amount,2)),\n         .before = 3) %>%\n  \n#group the columns in the following order \n  group_by(year, mth, category) %>%\n  summarize(total_amount = sum(amount))\n\nfj_cat\n\n# A tibble: 62 × 4\n# Groups:   year, mth [12]\n   year  mth   category       total_amount\n   <chr> <chr> <chr>                 <dbl>\n 1 2022  03    Education            14354.\n 2 2022  03    Food                327829.\n 3 2022  03    Recreation          649580.\n 4 2022  03    RentAdjustment       53504.\n 5 2022  03    Shelter             631623.\n 6 2022  03    Wage               6402720.\n 7 2022  04    Education            11424.\n 8 2022  04    Food                304282.\n 9 2022  04    Recreation          389688.\n10 2022  04    RentAdjustment        1429.\n# ℹ 52 more rows\n\n\n\nggplot(data = fj_cat,\n       aes(x= category, y=total_amount, size = total_amount)) + \n         geom_point(alpha=0.8, show.legend= FALSE) +\n         scale_size(range =c(2,12)) +\n         labs(titles = \"Year{as.integer(frame_time)}\",\n              x = \"Category\",\n              y = \"Total_amount\") +\n         transition_time(as.integer(year)) +\n         ease_aes(\"linear\") +\n         scale_y_continuous(labels = comma_format())"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#average-cashflow-available-for-residents-across-age-group",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#average-cashflow-available-for-residents-across-age-group",
    "title": "Take Home Exercise 1",
    "section": "5.4 Average Cashflow available for Residents across Age Group",
    "text": "5.4 Average Cashflow available for Residents across Age Group\n\n\nShow the code\ntooltip_css <- \"background-color:#C7B19C; #<<\nfont-style:bold; color:#446455;\" #<<\n\ntooltip <- function(y, ymax, accuracy = 1) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Average Cashflow:\", mean, \"+/-\", sem) #<<\n} #<<\n\npp <- ggplot(data=resident_profile_rev, \n                   aes(x = age_group),\n) +\n  stat_summary(aes(y = Cashflow, \n                   tooltip = after_stat(  #<<\n                     tooltip(y, ymax))),  #<<\n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  #<<\n    fill = \"#D3DDDC\"\n  ) +\n  stat_summary(aes(y = Cashflow),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n  ) +\n  labs(title=\"Average Cashflow available to Residents by age_group\") +\n  ylab(\"Total Cashflow\") +\n  xlab(\"Age Group\") \n\ngirafe(ggobj = pp,\n       width_svg = 8,\n       height_svg = 8*0.618,\n       options = list(    #<<\n       opts_tooltip(    #<<\n       css = tooltip_css)) #<<\n       )\n\n\n\n\n\n\n\n#plotting correlation between age and income \nggscatterstats(data = resident_profile_rev,\n  x = age, y = Income,\n  type = \"nonparametric\",\n  marginal = TRUE,\n  title = \"Significant Test of Correlation between Age and Income\",\n  xlab = \"Age\",\n  ylab = \"Income\"\n)\n\n\n\n\nCashflow / Income\n\n\nShow the code\n#plotting correlation between age and income across education level\nedu_low <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Low\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Low\", \n           x = \"Income\", y = \"Cashflow\") +\n           scale_y_continuous(labels = comma_format()) \n\nedu_hc <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"HighSchoolOrCollege\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n          labs(title = \"High School\", \n          x = \"Income\", y = \"Cashflow\") +\n          scale_y_continuous(labels = comma_format()) \n\nedu_bach <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Bachelors\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Bachelors\", \n            x = \"Income\", y = \"Cashflow\") +\n            scale_y_continuous(labels = comma_format()) \n\nedu_grad <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Graduate\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Graduate\", \n            x = \"Income\", y = \"Cashflow\") +\n            scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_edu <- ((edu_low + edu_hc) / (edu_bach + edu_grad) + plot_spacer())\n\n#add labels\ncorr_edu + plot_annotation(title = \"Correlation between Cashflow and Income\", \n                           subtitle = \"High correlation between Cashflow and Income at all education level\",\n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nObservations:\n\nAlmost perfect positive linear relationship between Cashflow and Income (>0.9)\nAs education level increases, the Sprearman correlation coefficient increases\n\n\n#  ggplot(data = resident_profile_rev,\n#         aes(x= joviality)) + \n#  geom_histogram(bins=10) +\n#  xlab(\"Joviality\") +\n#  ylab(\"No.of Residents\") +\n#  geom_vline(aes(xintercept = average_joviality), col =\"red\", linewidth=1 ) +\n#  annotate(\"text\", x=0.37, y= 1400, label=\"Average Joviality:\", size=4, color = \"red\") +    annotate(\"text\", x=0.37, y= 1300, label=format(average_joviality, big.mark=\",\"), size=4, color = \"red\") \n#  geom_vline(aes(xintercept = median_joviality), col =\"green\", linewidth=1 )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "Using p_load() of pacman package to load the required libraries\n\n\npacman::p_load(rstatix,gt,patchwork,tidyverse,webshot2,png)\n\n\nImporting data\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualizing-statistical-graph-qq-plot",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualizing-statistical-graph-qq-plot",
    "title": "In-class Exercise 4",
    "section": "1) Visualizing statistical graph QQ Plot",
    "text": "1) Visualizing statistical graph QQ Plot\nThe quantile-quantile (q-q) plot is a graphical technique for determining if two data sets come from populations with a common distribution.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#combining-statistical-graph-and-analysis-table",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#combining-statistical-graph-and-analysis-table",
    "title": "In-class Exercise 4",
    "section": "2) Combining statistical graph and analysis table",
    "text": "2) Combining statistical graph and analysis table\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- exam_data %>%\n  shapiro_test(ENGLISH) %>%\n  gt()\n\ntmp <-tempfile(fileext = \".png\")\ngtsave(sw_t,tmp)\ntable_png <- png::readPNG(tmp,\nnative= TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-Class Exercise 5",
    "section": "",
    "text": "Using p_load() of pacman package to load the required libraries\n\n\npacman :: p_load (jsonlite, tidygraph, ggraph, visNetwork, tidyverse)\n\n\nImporting data\n\n\nMC1 <- fromJSON(\"data/MC1.json\")\n\n\n\n\nMC1_nodes <-as_tibble(MC1$nodes) %>%\n  select(id,type, country)\n\n\nMC1_edges <-as_tibble(MC1$links) %>%\n  select(source,target,type,weight,key)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#refer-to-hands-on-exercise-5",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#refer-to-hands-on-exercise-5",
    "title": "In-Class Exercise 5",
    "section": "Refer to Hands-on Exercise 5",
    "text": "Refer to Hands-on Exercise 5\n\nWrangling Time\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nWrangling attributes\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\n\nUsing tbl_graph() to build tidygraph data model\n\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\nChanging the active object\n\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\n\nPlotting basic network graph\n\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "Using p_load() of pacman package to load tidyverse on\n\n\npacman:: p_load(tidyverse) \n\n\nImporting data\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-graph",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-graph",
    "title": "In-class Exercise 1",
    "section": "1) Horizontal Bar Graph",
    "text": "1) Horizontal Bar Graph\nChanging the colors of plot panel background of theme_minimal() to light blue and the color of grid lines to white.\n\nOutput:\n\nggplot(data= exam_data,\n       aes(x = RACE)) +\n       geom_bar() +\n       coord_flip() +\n       theme_minimal() +\n       theme(panel.background = element_rect(fill = 'lightblue') ,\n       panel.grid.minor=element_line(colour=\"white\"),\n       panel.grid.major=element_line(colour=\"white\")) +\n       ggtitle(\"Horizontal Bar Chart: \\nLight Blue theme and White grid lines \") +  \n       theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#vertical-bar-graph",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#vertical-bar-graph",
    "title": "In-class Exercise 1",
    "section": "2) Vertical Bar Graph",
    "text": "2) Vertical Bar Graph\nWith reference to the critics on the earlier slide, create a makeover looks similar to the figure on the right.\n\nOutput 1:\n\nggplot(data= exam_data,\n      aes(x = fct_infreq(RACE))) +\n      geom_bar() +\n      xlab(\"Race\") +\n      ylab(\"No.of\\nPupils\") +\n      ylim(0,220) +\n      geom_text(aes(label = paste(..count..,\",\", scales::percent(..count../sum(..count..),accuracy = 0.1))), \n      stat= \"count\", vjust = -0.5) +\n      ggtitle(\"Vertical Bar Chart: \\nSorted Frequency + Labelling \") +\n      theme(plot.title = element_text(hjust = 0.5))\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n\nOutput 2: Forcats Package.:\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "title": "In-class Exercise 1",
    "section": "3) Histogram",
    "text": "3) Histogram\n\nAdding mean and median lines on the histogram plot.\nChange fill color and line color\n\n\nOutput:\n\nggplot(data= exam_data,\n       aes(x = MATHS)) +\n       geom_histogram(color=\"black\",fill=\"light blue\",bins = 30) +\n       geom_vline(aes(xintercept=mean(MATHS)),\n            color=\"red\", linetype=\"dashed\", size=1) +\n       geom_vline(aes(xintercept=median(MATHS)),\n            color=\"black\", linetype=\"dashed\", size=1) +\n       ggtitle(\"Histogram: \\nAdd lines and color \") +  \n       theme(plot.title = element_text(hjust = 0.5))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n3.1) By Gender\n\nThe background histograms show the distribution of English scores for all pupils.\n\n\nOutput:\n\nd <- exam_data   \nd_bg <- d[, -3] \n\nggplot(d, aes(x = ENGLISH)) +\n       geom_histogram (data= d_bg, bins=30, alpha = 0.2) +\n       geom_histogram (bins=30, color = 'black') +\n       facet_wrap(~ GENDER) + \n       theme_bw()       \n\n\n\n\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  theme_bw() \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nd <- exam_data   \nd_bg <- d[, -3] \n\nggplot(data = exam_data, aes(x = ENGLISH, fill= GENDER, )) +\n    geom_histogram(bins = 30) +\n    facet_wrap(~ GENDER) +\n    guides(fill = FALSE) \n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatterplot",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatterplot",
    "title": "In-class Exercise 1",
    "section": "4) Scatterplot",
    "text": "4) Scatterplot\n\nThe scatterplot show the relationship between English and Maths for all pupils.\n\n\nOutput:\n\nggplot(data = exam_data, \n        aes (x= MATHS, y= ENGLISH)) +\n        geom_point() +\n        geom_hline(yintercept=50, linetype=\"dashed\", color = \"darkgrey\") +\n        geom_vline(xintercept=50, linetype=\"dashed\", color = \"darkgrey\") +\n        coord_cartesian(xlim=c(0,100), ylim=c(0,100))"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#merging-of-dataframe",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#merging-of-dataframe",
    "title": "Take Home Exercise 1",
    "section": "3.4 Merging of Dataframe",
    "text": "3.4 Merging of Dataframe\nFull_join will be used to create a new table by joining the cleaned participants file and pivoted financial journal. It will be match by participant’s ID. Likewise, the sequence in the dataframe will be relocated to highlight several columns.\n\n\nShow the code\n#join both data sets \nresident_profile <- full_join(participants_new, pivoted_fj, \n                       by = c(\"participantId\" = \"participantId\")) %>%\n#relocate columns to the front (by importance)\n                    relocate(year_mth, .after =participantId) %>%\n                    relocate(Cashflow, .after = year_mth) %>%\n                    relocate(age_group, .after = Cashflow) %>%\n                    relocate(educationLevel, .after = age_group) %>%\n                    relocate(Income, .after = haveKids) %>%\n                    relocate(Expenses , .after = Income) \nresident_profile %>%\n    select(c(1:18))\n\n\n# A tibble: 10,691 × 18\n   participantId year_mth Cashflow age_group educationLevel      householdSize\n   <chr>         <chr>       <dbl> <ord>     <ord>               <ord>        \n 1 0             2022-03    10722. 30-39     HighSchoolOrCollege 3            \n 2 0             2022-04     7559. 30-39     HighSchoolOrCollege 3            \n 3 0             2022-05     7808. 30-39     HighSchoolOrCollege 3            \n 4 0             2022-06     7733. 30-39     HighSchoolOrCollege 3            \n 5 0             2022-07     6704. 30-39     HighSchoolOrCollege 3            \n 6 0             2022-08     8291. 30-39     HighSchoolOrCollege 3            \n 7 0             2022-09     7904. 30-39     HighSchoolOrCollege 3            \n 8 0             2022-10     7752. 30-39     HighSchoolOrCollege 3            \n 9 0             2022-11     7817. 30-39     HighSchoolOrCollege 3            \n10 0             2022-12     7832. 30-39     HighSchoolOrCollege 3            \n# ℹ 10,681 more rows\n# ℹ 12 more variables: haveKids <lgl>, Income <dbl>, Expenses <dbl>, age <dbl>,\n#   interestGroup <chr>, joviality <dbl>, joviality_bins <fct>,\n#   Education <dbl>, Food <dbl>, Recreation <dbl>, Shelter <dbl>, Wage <dbl>\n\n\n\n3.4.1 Entries Check\n\n\nShow the code\n#check if participants_id have entries for the entire year \nparticipant_counts <- resident_profile %>%\n  group_by(participantId) %>%\n  summarise(num_months = n_distinct(year_mth)) %>%\n  ungroup()\n\nfiltered_count <- participant_counts %>%\n  filter(num_months != 12) %>%\n  nrow()\n\nfiltered_count \n\n\n[1] 131\n\n\n\n#create a revised dataframe to exclude id that do not have entries for the time period\nresident_profile_rev <- resident_profile %>%\n  group_by(participantId) %>%\n  mutate(num_months = n_distinct(year_mth)) %>%\n  ungroup() %>%\n  filter(num_months == 12) %>%\n  select(1:13,15:19)\nresident_profile_rev\n\n# A tibble: 10,560 × 18\n   participantId year_mth Cashflow age_group educationLevel      householdSize\n   <chr>         <chr>       <dbl> <ord>     <ord>               <ord>        \n 1 0             2022-03    10722. 30-39     HighSchoolOrCollege 3            \n 2 0             2022-04     7559. 30-39     HighSchoolOrCollege 3            \n 3 0             2022-05     7808. 30-39     HighSchoolOrCollege 3            \n 4 0             2022-06     7733. 30-39     HighSchoolOrCollege 3            \n 5 0             2022-07     6704. 30-39     HighSchoolOrCollege 3            \n 6 0             2022-08     8291. 30-39     HighSchoolOrCollege 3            \n 7 0             2022-09     7904. 30-39     HighSchoolOrCollege 3            \n 8 0             2022-10     7752. 30-39     HighSchoolOrCollege 3            \n 9 0             2022-11     7817. 30-39     HighSchoolOrCollege 3            \n10 0             2022-12     7832. 30-39     HighSchoolOrCollege 3            \n# ℹ 10,550 more rows\n# ℹ 12 more variables: haveKids <lgl>, Income <dbl>, Expenses <dbl>, age <dbl>,\n#   interestGroup <chr>, joviality <dbl>, joviality_bins <fct>, Food <dbl>,\n#   Recreation <dbl>, Shelter <dbl>, Wage <dbl>, RentAdjustment <dbl>\n\n\n\nremove 131 participants\n\n\n#Check for missing values\nany(is.na(participants_new))\n\n[1] FALSE\n\nany(is.na(pivoted_fj))\n\n[1] FALSE\n\n\n\nkable(head(resident_profile_rev), \"simple\") \n\n\n\n\nparticipantId\nyear_mth\nCashflow\nage_group\neducationLevel\nhouseholdSize\nhaveKids\nIncome\nExpenses\nage\ninterestGroup\njoviality\njoviality_bins\nFood\nRecreation\nShelter\nWage\nRentAdjustment\n\n\n\n\n0\n2022-03\n10722.01\n30-39\nHighSchoolOrCollege\n3\nTRUE\n11931.95\n1209.94\n36\nH\n0\n(0,0.2]\n268.26\n348.68\n554.99\n11931.95\n0\n\n\n0\n2022-04\n7558.67\n30-39\nHighSchoolOrCollege\n3\nTRUE\n8636.88\n1078.21\n36\nH\n0\n(0,0.2]\n265.79\n219.42\n554.99\n8636.88\n0\n\n\n0\n2022-05\n7807.63\n30-39\nHighSchoolOrCollege\n3\nTRUE\n9048.16\n1240.53\n36\nH\n0\n(0,0.2]\n264.54\n382.99\n554.99\n9048.16\n0\n\n\n0\n2022-06\n7732.59\n30-39\nHighSchoolOrCollege\n3\nTRUE\n9048.16\n1315.57\n36\nH\n0\n(0,0.2]\n256.90\n465.67\n554.99\n9048.16\n0\n\n\n0\n2022-07\n6704.27\n30-39\nHighSchoolOrCollege\n3\nTRUE\n8636.88\n1932.61\n36\nH\n0\n(0,0.2]\n270.13\n1069.48\n554.99\n8636.88\n0\n\n\n0\n2022-08\n8290.55\n30-39\nHighSchoolOrCollege\n3\nTRUE\n9459.44\n1168.89\n36\nH\n0\n(0,0.2]\n261.76\n314.13\n554.99\n9459.44\n0"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#merging-of-data-frame",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#merging-of-data-frame",
    "title": "Take Home Exercise 1",
    "section": "3.4 Merging of Data frame",
    "text": "3.4 Merging of Data frame\nFull_join will be used to create a new table by joining the cleaned participants dataset and pivoted financial journal dataset. It will be match by participant’s ID. Likewise, the sequence in the dataset will be relocated to highlight several columns.\n\n\nShow the code\n#join both data sets \nresident_profile <- full_join(participants_new, pivoted_fj, \n                       by = c(\"participantId\" = \"participantId\")) %>%\n#relocate columns to the front (by importance)\n                    relocate(year_mth, .after =participantId) %>%\n                    relocate(Cashflow, .after = year_mth) %>%\n                    relocate(age_group, .after = Cashflow) %>%\n                    relocate(educationLevel, .after = age_group) %>%\n                    relocate(Income, .after = haveKids) %>%\n                    relocate(Expenses , .after = Income) \nresident_profile %>%\n    select(c(1:18))\n\n\n# A tibble: 10,691 × 18\n   participantId year_mth Cashflow age_group educationLevel      householdSize\n   <chr>         <chr>       <dbl> <ord>     <ord>               <ord>        \n 1 0             2022-03    10722. 30-39     HighSchoolOrCollege 3            \n 2 0             2022-04     7559. 30-39     HighSchoolOrCollege 3            \n 3 0             2022-05     7808. 30-39     HighSchoolOrCollege 3            \n 4 0             2022-06     7733. 30-39     HighSchoolOrCollege 3            \n 5 0             2022-07     6704. 30-39     HighSchoolOrCollege 3            \n 6 0             2022-08     8291. 30-39     HighSchoolOrCollege 3            \n 7 0             2022-09     7904. 30-39     HighSchoolOrCollege 3            \n 8 0             2022-10     7752. 30-39     HighSchoolOrCollege 3            \n 9 0             2022-11     7817. 30-39     HighSchoolOrCollege 3            \n10 0             2022-12     7832. 30-39     HighSchoolOrCollege 3            \n# ℹ 10,681 more rows\n# ℹ 12 more variables: haveKids <lgl>, Income <dbl>, Expenses <dbl>, age <dbl>,\n#   interestGroup <chr>, joviality <dbl>, joviality_bins <fct>,\n#   Education <dbl>, Food <dbl>, Recreation <dbl>, Shelter <dbl>, Wage <dbl>\n\n\n\n3.4.1 Entries Check\nTo ensure data accuracy, the code chunk below checks the completeness of the data. Given that the data has a time period of one year, the code examines if the participants have entries for the entire time period.\n\n\nShow the code\n#check if participants_id have entries for the entire year \nparticipant_counts <- resident_profile %>%\n  group_by(participantId) %>%\n  summarise(num_months = n_distinct(year_mth)) %>%\n  ungroup()\n\nfiltered_count <- participant_counts %>%\n  filter(num_months != 12) %>%\n  nrow()\n\nfiltered_count \n\n\n[1] 131\n\n\nIt has been observed that there are 131 participants who do not have entries for the entire time period. To avoid inaccuracy, these group of participants will be excluded from the analysis.\n\n\n3.4.2 Missing Values Check\nThrough the code chunk below, we confirmed that there are no missing values in resident_profile dataset.\n\n#Check for missing values\nany(is.na(resident_profile))\n\n[1] FALSE\n\n\n\n\n3.4.3 Revised Resident’s Profile Dataset\nGiven that we have removed duplicates in section 3.3.2, removed entries in section 3.4.1 and observed no missing values in section 3.4.2, the resident’s profile data set have been revised. We will be using the knitr: kable() function to display the final dataset.\n\n\nShow the code\n#create a revised dataframe to exclude id that do not have entries for the time period\nresident_profile_rev <- resident_profile %>%\n  group_by(participantId) %>%\n  mutate(num_months = n_distinct(year_mth)) %>%\n  ungroup() %>%\n  filter(num_months == 12) %>%\n  select(-num_months, -Shelter, -RentAdjustment, -Wage)\n\n#output for dataframe using knitr:: kable\nkable(head(resident_profile_rev), \"simple\") \n\n\n\n\n\nparticipantId\nyear_mth\nCashflow\nage_group\neducationLevel\nhouseholdSize\nhaveKids\nIncome\nExpenses\nage\ninterestGroup\njoviality\njoviality_bins\nEducation\nFood\nRecreation\nShelter_new\n\n\n\n\n0\n2022-03\n10722.01\n30-39\nHighSchoolOrCollege\n3\nTRUE\n11931.95\n1209.94\n36\nH\n0\n(0,0.2]\n38.01\n268.26\n348.68\n554.99\n\n\n0\n2022-04\n7558.67\n30-39\nHighSchoolOrCollege\n3\nTRUE\n8636.88\n1078.21\n36\nH\n0\n(0,0.2]\n38.01\n265.79\n219.42\n554.99\n\n\n0\n2022-05\n7807.63\n30-39\nHighSchoolOrCollege\n3\nTRUE\n9048.16\n1240.53\n36\nH\n0\n(0,0.2]\n38.01\n264.54\n382.99\n554.99\n\n\n0\n2022-06\n7732.59\n30-39\nHighSchoolOrCollege\n3\nTRUE\n9048.16\n1315.57\n36\nH\n0\n(0,0.2]\n38.01\n256.90\n465.67\n554.99\n\n\n0\n2022-07\n6704.27\n30-39\nHighSchoolOrCollege\n3\nTRUE\n8636.88\n1932.61\n36\nH\n0\n(0,0.2]\n38.01\n270.13\n1069.48\n554.99\n\n\n0\n2022-08\n8290.55\n30-39\nHighSchoolOrCollege\n3\nTRUE\n9459.44\n1168.89\n36\nH\n0\n(0,0.2]\n38.01\n261.76\n314.13\n554.99"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#the-circulation-of-money",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#the-circulation-of-money",
    "title": "Take Home Exercise 1",
    "section": "4.3 The Circulation of Money",
    "text": "4.3 The Circulation of Money\nAs illustrated earlier, the cash flow is a holding transaction. It is holded by the individual after repaying the necessary debt/expenses. To build more wealth, it is ideal for Wage to increase or for expenses to decrease.\nWith that in mind, a line scatter pot is used to identify the trend in various categories over a time period. The participants dataset have been revised to exclude participants who did not fulfill the entries check. It has been reformatted before executing a full_join with participants_count data set. The joined table concatenates the count of the year-mth period (num_months) that is not available in the dataset and filters it away.\nThe plot_ly() graph below shows the total amount circulated by the participants.\n\n\nShow the code\n#to reformat partcipantId, create year-mth, round off amount to 2.d.p\nfinancial_journal_lessdup <- financial_journal_lessdup %>%\n  mutate(participantId = as.character(participantId),\n        year_mth = format(as.Date(financial_journal_lessdup$timestamp), \"%Y-%m\",\n        amount = abs(round(amount,2)),\n        .before = 1)) \n\n#Create new df by doing a full join with participants_counts\nfinancial_journal_lessdup_lessentries <- full_join(\n  financial_journal_lessdup, participant_counts, \n  by = c(\"participantId\" = \"participantId\"))  %>%\n  group_by(participantId) %>%\n  #participants_counts contains the number of months the participants entries are in\n  mutate(num_months = n_distinct(year_mth)) %>%\n  ungroup() %>%\n  #filter away participantsId who do not have entries for the full year\n  filter(num_months == 12) %>%\n  select(participantId, year_mth, category,amount)\n\n#create another df to group by year_mth, category\ngrouped_data_rev <- financial_journal_lessdup_lessentries %>%\n  #group the columns in the following order \n  group_by(year_mth, category) %>%\n  summarize(total_amount = sum(amount)) \n\n#creating interactive graph\nplot_ly(data = grouped_data_rev, \n  x = ~year_mth, y = ~total_amount, color = ~category,\n  type = 'scatter', mode = 'line',\n  hovertemplate = ~paste(\"Year-Month:\", year_mth,\n                         \"<br>Amount:\", format(total_amount, big.mark = \",\"))) |>\n\n#Configure title and axes\n  layout(title = \"The Circulation of Money\",\n         xaxis = list(title = \"Time Period\"),\n         yaxis = list(title = \"Amount\"))\n\n\n\n\n\n\nObservations:\n\nIncome (~Wage) is fairly constant except for Mar 2022. It can be inferred that the spike in Wage could be a form of bonus, grant, incentives given by the service centre and might not be an one off special event (requires longer time period to determine).\nExpenses distribution seems to be constant with lesser spending on Education expenses . However, there is a slight fluctuation in Recreation expenses.\n\n\n4.3.1 Spending Patterns of participants\nAs observed earlier, there are a slight fluctuation in Recreation expenses. Henceforth, Wage will be removed in the graph to better visualize the expenses.\nPlot_ly graph is plotted to visualize the spending patterns.\n\n\nShow the code\n#create a new dataset\ngrouped_data_rev_new <- financial_journal_lessdup_lessentries %>%\n  mutate(amount = abs(round(amount,2))) %>%\n  #group the columns in the following order \n  group_by(category,year_mth) %>%\n  summarize(total_amount = sum(amount)) \n\n# Filter out \"Wage\" category from the data frame\ngrouped_data_rev_newest <- grouped_data_rev_new %>% \n   filter(category != \"Wage\")\n\n#creating interactive graph\nplot_ly(data = grouped_data_rev_newest, \n  x = ~year_mth, y = ~total_amount, color = ~category,\n  type = 'scatter', mode = 'line',\n  hovertemplate = ~paste(\"Year-Month:\", year_mth,\n                         \"<br>Amount:\", format(total_amount, big.mark = \",\"))) |>\n\n#Configure title and axes\n  layout(title = \"Spending Patterns of participants from Mar 2022 - Feb 2023\",\n         xaxis = list(title = \"Time Period\"),\n         yaxis = list(title = \"Total Expenses\"))\n\n\n\n\n\n\nObservations:\n\nEducation remain constant throughout while Shelter decrease in Mar 2022 and remains constant. Both expenses are a fixed expense.\nRecreation expenses fluctuates more in comparison to Food expenses."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#association-test-between-age-group-and-education-level",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#association-test-between-age-group-and-education-level",
    "title": "Take Home Exercise 1",
    "section": "5.1 Association Test between Age group and Education Level",
    "text": "5.1 Association Test between Age group and Education Level\nAs observed in Section 4.1 - Interactive Dashboard, we noticed that the age-group is left-skewed while the education level is right-skewed. Therefore, we would like to test if there is any association between the two variables. Notably, the association test is non-parametric and thus, does not have to conform to the normality assumption.\nAt 95% confidence level,\nHo : No association exists between the age group and education level\nH1: Association exists between the age group and education level\n\n\nShow the code\nggbarstats(data = resident_profile_rev, \n           x = educationLevel, y = age_group,\n           xlab= \"Age Group\", ylab = \"Education Level\",\n           title = \"Comparison of Education level across Age Group\",\n           type = \"nonparametric\", conf.level = 0.95,\n           package = \"wesanderson\", palette = \"Chevalier1\"\n           )\n\n\n\n\n\nFrom the graph, we observed that majority of the age group have a HighSchoolOrCollege education level. Likewise, we also note that the interest for further education decreases as the age increases. Interestingly, young adults aged 20-29 have attained a higher education level than any other age group.\nFrom the test result above (p<0.05) , we conclude that there is an association between the age group and education level as we reject the null hypothesis."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#differences-in-joviality-based-on-education-levelage-group",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#differences-in-joviality-based-on-education-levelage-group",
    "title": "Take Home Exercise 1",
    "section": "5.2 Differences in Joviality based on Education Level/Age Group",
    "text": "5.2 Differences in Joviality based on Education Level/Age Group\nAs defined earlier, Joviality indicates the participant’s overall happiness at the start of the study. We will like to found out if there is a difference in Joviality based on Education Level. Before testing our hypothesis, we will perform a normality assumption test at 95% confidence level.\n\n5.2.1 Normality Assumption Test\nThe statistical graph - Normal Quantile Plot (QQ Plot) is used to visualize a normal distribution as it shows the type of distribution. To be normally distributed, the dot points should be scatter very closely to the slope line. However, as seen from bottom left figure, the dot points curve. Therefore, by the data visualization alone, we can visually confirmed that the observed values failed to conform to the normality assumption.\nTo confirm our data visualization, we perform an Anderson-Darling normality test.\nAt 95% confidence level:\nHo: the observed distribution resembles normal distribution\nH1: the observed distribution failed to resemble normal distribution\n\n\nShow the code\n#Anderson-Darling normality test\nad_test <- ad.test(resident_profile_rev$joviality)\n\n# QQ plot\nqq <- ggplot(data = resident_profile_rev, \n             aes(sample = joviality)) +\n      stat_qq() +\n      stat_qq_line() \n      \n\n# Create a data frame with ad_test result\ntable_data <- data.frame(\n  Test = \"Anderson-Darling\",\n  Statistic = ad_test$statistic,\n  p_value = ad_test$p.value\n  )\n\n# Save plot and table as png image\npng(\"qq_plot_with_table.png\")\ngrid.arrange(qq, tableGrob(table_data), nrow = 1, \n             top = text_grob(\"Normality Quantile Plot with Anderson-Darling Normality Test\", size =20))\n\n#display output using knitr \nknitr::include_graphics(\"qq_plot_with_table.png\")\n\n\n\n\n\nBased on the result above, we concluded that there is enough statistical evidence to reject the null hypothesis. Since the p-values fall below (p < 0.05), normality is not assumed. Henceforth, we will use the non-parametric test to conduct our analysis.\n\n\n5.2.2 Kruskal-Wallis Test for Joviality across Education Level\nWe will test the following hypothesis at 95% Confidence Level:\nHo : the median Joviality across different education level is the same\nH1: the median Joviality across different education level is not the same\n\n\nShow the code\nggbetweenstats(data = resident_profile_rev,\n       x= educationLevel, y= joviality, type =\"np\",\n       xlab= \"Education Level\", ylab = \"Joviality\",\n       title = \"Comparison of Joviality across Education Level\",\n       pairwise.comparisons = TRUE, pairwise.display =\"ns\", conf.level = 0.95,\n       package = \"wesanderson\", palette = \"Chevalier1\"\n       )\n\n\n\n\n\nAs observed from the test results above, the P-value is lower than the 0.05. As such, there is enough statistical evidence to reject the null hypothesis that the median joviality across education level is the same.\nAdditionally, we want to find out if there any distinct similarities between the district. From the figure above, we discovered that not all pair comparison are statistically significant. The pair (Low and HighSchoolOrCollege) is not statistically significant with a P-value of 0.08, which is greater than 0.05. Thus, we cannot reject the null hypothesis that there is not differences between the joviality level between the pair.\n\n\n5.2.3 Plotting Confidence Interval of Point Estimates\nstat_pointinterval() of [ggdist] package is used to visualize the distribution of confidence interval by education level. Due to skewness of data, the median point estimate are used. To distinguish between the interval, scale_color_manual() of [ggplot2] is used (Note: color contrast is added) .\n\n\nShow the code\n#plot points and intervals \nggplot(data = resident_profile_rev, \n       aes(x = educationLevel, y = joviality)) +\n  stat_pointinterval(aes(interval_color = after_stat(level)),\n                     point_interval = \"median_qi\",\n                     .width = c(0.95,0.99),\n                     point_color = \"#C93312\") +\n  labs(title = \"Visualizing Confidence Intervals of Median Joviality\", \n       x = \"Education Level\", y = \"Joviality\") +\n#add colors to graph \n  scale_color_manual(values = c(\"#D3DDDC\",\"#446455\"), \n                     aesthetics = \"interval_color\") +\n\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) \n\n\n\n\n\nAs seen above, the are high uncertainty across the education level, with an increase in median estimate. This suggests that there might be large presence of outliers in each education level.\n\n\n5.2.4 Kruskal-Wallis Test for Joviality across Age Group\nEarlier, we discovered that there is a statistical difference in joviality across Education Level, we would like to examine if the same applies across age group. As per section 5.2.1, normality is not assumed. Thus, we will use non-parametric test to conduct our analysis.\nWe will test the following hypothesis at 95% Confidence Level:\nHo : the median Joviality across the age group is the same\nH1: the median Joviality across the age group is not the same\n\n\nShow the code\nggbetweenstats(data = resident_profile_rev,\n       x= age_group, y= joviality, type =\"np\",\n       xlab= \"Age Group\", ylab = \"Joviality\",\n       title = \"Comparison of Joviality across Age Group\",\n       pairwise.comparisons = TRUE, pairwise.display =\"ns\", conf.level = 0.95,\n       package = \"wesanderson\", palette = \"Chevalier1\"\n       )\n\n\n\n\n\nAs observed from the test results above, the P-value is lower than the 0.05. As such, there is enough statistical evidence to reject the null hypothesis that the median joviality across age group is the same.\nFrom the figure above, we discovered that not all pair comparison are statistically significant as there are two pairs with p-value greater than 0.05. The pairs (age group 20-29 and age group 30-39) and (age group 30-39 and age group 40-49) are not statistically significant with a P-value of 0.36 and 0.20 respectively. Thus, we cannot reject the null hypothesis that there is not differences between the joviality level between the pairs."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#differences-in-joviality-based-on-income",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#differences-in-joviality-based-on-income",
    "title": "Take Home Exercise 1",
    "section": "5.3 Differences in Joviality based on Income",
    "text": "5.3 Differences in Joviality based on Income\nWe will like to found out if there is a difference in Joviality based on Income. A plot_ly() graph is use to graph. Opacity is included to highlight the contrast and a hovertemplate is included to reflect the <participantID>, <Cashflow>, <Income>, and Expenses .\n\n\nShow the code\nplot_ly(data = resident_profile_rev, \n             x = ~joviality, y = ~Income,\n        hovertemplate = ~paste(\"<br>Participant's ID:\",participantId,\n                               \"<br>Cashflow:\", Cashflow,\n                              \"<br>Income:\", Income,\n                               \"<br>Expenses:\", Expenses),\n             \n            type = \"scatter\",\n            mode = \"markers\",\n            marker = list(opacity = 0.7,sizemode = \"diameter\", \n                          line = list(width =0.1, color = \"white\"))) |>\n\n#add title and labels to axis \n        layout(title = \"Income vs Joviality\" ,\n         xaxis = list(title = \"Joviality level\") ,\n         yaxis = list(title = \"Income\"))\n\n\n\n\n\n\nObservations:\n\nJoviality level decreases as income level increases. It decreases sharply when income exceeds $15k.\nSimilar to income range of $10-$15k where majority have low joviality\nJoviality level are more spread out when income ranges below $5k\n\n\n5.3.1 Correlation Analysis between Joviality and Income\nSince joviality is not normally distributed, a ggscatterstats() from [ggstatsplot] is used to build a visual for Significant Test of Correlation between Joviality and Income.\n\n\nShow the code\nggscatterstats(\n  data = resident_profile_rev,\n  x = joviality, y = Income,\n  type = \"nonparametric\", marginal = TRUE,\n  title = \"Significant Test of Correlation between Joviality and Income\",\n  xlab = \"Joviality\",\n  ylab = \"Income\"\n)\n\n\n\n\n\nThe test result of The Spearman correlation coefficient indicates that the there is a weak negative linear relationship between Joviality and Income. Even though the correlation is on the weaker end, we can conclude that there is an inverse relationship between them. The higher you earn, the lower your joviality.\n\n\n\n\n\n\nCorrelation Coefficient\n\n\n\nTo interpret the values of correlation (-1 <= x<= 1),\n\n‘+’ reflects a positive linear relationship\n‘-’ reflects a negative linear relationship\nA value of <0.3 is weak, 0.5 is moderate, >0.8 is strong, and 1 is perfect"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#factors-affecting-cash-flow",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#factors-affecting-cash-flow",
    "title": "Take Home Exercise 1",
    "section": "5.4 Factors affecting Cash flow",
    "text": "5.4 Factors affecting Cash flow\nNotably, the circulation of money is crucial for City of Engagement and could potentially impact the Local Plan 2023 that is in the midst of preparation. Henceforth, we would like to into the correlation between income and expenses across education level.\n\n5.4.1 Cash flow vs Income across Education Level\nMultiple ggscatterstats() from [ggstatsplot] is used to build a visual for Significant Test of Correlation between Cashflow and Income by filtering the education level. patchwork is included to combine the graphs.\n\n\nShow the code\n#plotting correlation between cashflow and income across education level\nedu_low <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Low\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Low\", \n           x = \"Income\", y = \"Cash flow\") +\n           scale_y_continuous(labels = comma_format()) \n\nedu_hc <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"HighSchoolOrCollege\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n          labs(title = \"High School\", \n          x = \"Income\", y = \"Cash flow\") +\n          scale_y_continuous(labels = comma_format()) \n\nedu_bach <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Bachelors\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Bachelors\", \n            x = \"Income\", y = \"Cash flow\") +\n            scale_y_continuous(labels = comma_format()) \n\nedu_grad <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Graduate\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Graduate\", \n            x = \"Income\", y = \"Cash flow\") +\n            scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_edu <- ((edu_low + edu_hc) / (edu_bach + edu_grad) + plot_spacer())\n\n#add labels\ncorr_edu + plot_annotation(title = \"Correlation between Cashflow and Income\", \n                           subtitle = \"High correlation between Cashflow and Income at all education level\",\n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nAs seen above, there is an almost perfect positive linear relationship (>0.9) between Cash flow and Income across Education level. The Spearman correlation coefficient also increases at different education level.\n\n\n5.4.2 Cash flow vs Expenses across Education Level\nSimilar approach to the previous section.\n\n\nShow the code\n#plotting correlation between expenses and cashflow across education level\nedu_low_ex <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Low\"), \n                           x = Expenses, y = Cashflow,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Low\", \n           x = \"Expenses\", y = \"Cash flow\") +\n           scale_y_continuous(labels = comma_format()) \n\nedu_hc_ex <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"HighSchoolOrCollege\"), \n                           x = Expenses, y = Cashflow,\n                           type = \"nonparametric\") + \n          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n          labs(title = \"High School\", \n          x = \"Expenses\", y = \"Cash flow\") +\n          scale_y_continuous(labels = comma_format()) \n\nedu_bach_ex <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Bachelors\"), \n                           x = Expenses, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Bachelors\", \n            x = \"Expenses\", y = \"Cash flow\") +\n            scale_y_continuous(labels = comma_format()) \n\nedu_grad_ex <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Graduate\"), \n                           x = Expenses, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Graduate\", \n            x = \"Expenses\", y = \"Cash flow\") +\n            scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_edu <- ((edu_low_ex + edu_hc_ex) / (edu_bach_ex + edu_grad_ex) + \n               plot_spacer())\n\n#add labels\ncorr_edu + plot_annotation(title = \"Correlation between Cashflow and Expenses\", \n                           subtitle = \"Weak-to-moderate correlation between Cashflow and Expenses at all education level\",\n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nAs seen above, there is a negative linear relationship between Cash flow and Expenses across Education level. Low Education Level and Bachelors Education level have a weak-to-moderate correlation while HighSchoolOrCollege and Graduate have a weak negative linear relationship. Although the correlation is weak, we can still infer that the cashflow increases when expenses decreases.\n\n\n5.4.3 Correlation between Income and Expenses (Various Categories)\nNotably, we observed fluctuations in Recreation and Food expenses. Henceforth, we could like to know if there are any correlation between Income and various categories. Similarly, a ggscatterstats() from [ggstatsplot] is used to build a visual for Significant Test of Correlation between Income and Various Categories.\n\n\nShow the code\n#plotting correlation between income and various expenses\nin_food <- ggscatterstats(data = resident_profile_rev,\n                           x = Food, y = Income,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Food\", \n           x = \"Food\", y = \"Income\") +\n           scale_y_continuous(labels = comma_format()) \n\nin_recreation <- ggscatterstats(data = resident_profile_rev,\n                           x = Recreation, y = Income,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Recreation\", \n           x = \"Recreation\", y = \"Income\") +\n           scale_y_continuous(labels = comma_format())\n\nin_shelter <- ggscatterstats(data = resident_profile_rev,\n                           x = Shelter_new, y = Income,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Shelter\", \n           x = \"Shelter\", y = \"Income\") +\n           scale_y_continuous(labels = comma_format()) \n\nin_education <- ggscatterstats(data = resident_profile_rev,\n                           x = Education, y = Income,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Education\", \n           x = \"Education\", y = \"Income\") +\n           scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_income <- ((in_recreation + in_food) / (in_shelter + in_education) + \n               plot_spacer())\n\n#add labels\ncorr_income + plot_annotation(title = \"Correlation between Income and various Expenses\", \n                           subtitle = \"Weak correlation between Income and various Expenses at all education level\", \n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nFrom the results above, we noticed that all categories have a weak negative linear relationship with Income. Despite the fact that Education and Shelter belongs to fixed expenses whereas Recreation and Food are variable expenses, the correlation coefficient results prove otherwise."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#cash-flow-vs-income-across-education-level",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#cash-flow-vs-income-across-education-level",
    "title": "Take Home Exercise 1",
    "section": "5.4.1 Cash flow vs Income across Education Level",
    "text": "5.4.1 Cash flow vs Income across Education Level\n\n\nShow the code\n#plotting correlation between age and income across education level\nedu_low <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Low\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Low\", \n           x = \"Income\", y = \"Cash flow\") +\n           scale_y_continuous(labels = comma_format()) \n\nedu_hc <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"HighSchoolOrCollege\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n          labs(title = \"High School\", \n          x = \"Income\", y = \"Cash flow\") +\n          scale_y_continuous(labels = comma_format()) \n\nedu_bach <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Bachelors\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Bachelors\", \n            x = \"Income\", y = \"Cash flow\") +\n            scale_y_continuous(labels = comma_format()) \n\nedu_grad <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Graduate\"), \n                           x = Income, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Graduate\", \n            x = \"Income\", y = \"Cash flow\") +\n            scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_edu <- ((edu_low + edu_hc) / (edu_bach + edu_grad) + plot_spacer())\n\n#add labels\ncorr_edu + plot_annotation(title = \"Correlation between Cashflow and Income\", \n                           subtitle = \"High correlation between Cashflow and Income at all education level\",\n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nThere is an almost perfect positive linear relationship (>0.9) between Cash flow and Income across Education level. The Spearman correlation coefficient also increases at different education level."
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#cash-flow-vs-expenses-across-education-level",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#cash-flow-vs-expenses-across-education-level",
    "title": "Take Home Exercise 1",
    "section": "5.3.2 Cash flow vs Expenses across Education Level",
    "text": "5.3.2 Cash flow vs Expenses across Education Level\n\n\nShow the code\n#plotting correlation between age and income across education level\nedu_low_ex <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Low\"), \n                           x = Expenses, y = Cashflow,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Low\", \n           x = \"Expenses\", y = \"Cash flow\") +\n           scale_y_continuous(labels = comma_format()) \n\nedu_hc_ex <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"HighSchoolOrCollege\"), \n                           x = Expenses, y = Cashflow,\n                           type = \"nonparametric\") + \n          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n          labs(title = \"High School\", \n          x = \"Expenses\", y = \"Cash flow\") +\n          scale_y_continuous(labels = comma_format()) \n\nedu_bach_ex <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Bachelors\"), \n                           x = Expenses, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Bachelors\", \n            x = \"Expenses\", y = \"Cash flow\") +\n            scale_y_continuous(labels = comma_format()) \n\nedu_grad_ex <- ggscatterstats(data = resident_profile_rev |> \n                           filter(educationLevel == \"Graduate\"), \n                           x = Expenses, y = Cashflow,\n                           type = \"nonparametric\") + \n            theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n            labs(title = \"Graduate\", \n            x = \"Expenses\", y = \"Cash flow\") +\n            scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_edu <- ((edu_low_ex + edu_hc_ex) / (edu_bach_ex + edu_grad_ex) + \n               plot_spacer())\n\n#add labels\ncorr_edu + plot_annotation(title = \"Correlation between Cashflow and Expenses\", \n                           subtitle = \"High correlation between Cashflow and Expenses at all education level\",\n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#factors-affecting-expenses",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#factors-affecting-expenses",
    "title": "Take Home Exercise 1",
    "section": "5.5 Factors affecting Expenses",
    "text": "5.5 Factors affecting Expenses\n\n\nShow the code\nex_food <- ggscatterstats(data = resident_profile_rev,\n                           x = Food, y = Expenses,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Food\", \n           x = \"Food\", y = \"Expenses\") +\n           scale_y_continuous(labels = comma_format()) \n\nex_recreation <- ggscatterstats(data = resident_profile_rev,\n                           x = Recreation, y = Expenses,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Recreation\", \n           x = \"Recreation\", y = \"Expenses\") +\n           scale_y_continuous(labels = comma_format())\n\nex_shelter <- ggscatterstats(data = resident_profile_rev,\n                           x = Shelter_new, y = Expenses,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Shelter\", \n           x = \"Shelter\", y = \"Expenses\") +\n           scale_y_continuous(labels = comma_format()) \n\nex_education <- ggscatterstats(data = resident_profile_rev,\n                           x = Education, y = Expenses,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Education\", \n           x = \"Education\", y = \"Expenses\") +\n           scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_expenses <- ((ex_recreation + ex_food) / (ex_shelter + ex_education) + \n               plot_spacer())\n\n#add labels\ncorr_expenses + plot_annotation(title = \"Correlation between Expenses and its categories\", \n                           subtitle = \"High correlation between Cashflow and Expenses at all education level\", \n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))"
  },
  {
    "objectID": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#factors-affecting-the-categories",
    "href": "Take-Home_Ex/Take_Home_Ex01/Take-Home_Ex01.html#factors-affecting-the-categories",
    "title": "Take Home Exercise 1",
    "section": "5.5 Factors affecting the categories",
    "text": "5.5 Factors affecting the categories\n\n\nShow the code\nin_food <- ggscatterstats(data = resident_profile_rev,\n                           x = Food, y = Income,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Food\", \n           x = \"Food\", y = \"Income\") +\n           scale_y_continuous(labels = comma_format()) \n\nin_recreation <- ggscatterstats(data = resident_profile_rev,\n                           x = Recreation, y = Income,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Recreation\", \n           x = \"Recreation\", y = \"Income\") +\n           scale_y_continuous(labels = comma_format())\n\nin_shelter <- ggscatterstats(data = resident_profile_rev,\n                           x = Shelter_new, y = Income,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Shelter\", \n           x = \"Shelter\", y = \"Income\") +\n           scale_y_continuous(labels = comma_format()) \n\nin_education <- ggscatterstats(data = resident_profile_rev,\n                           x = Education, y = Income,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Education\", \n           x = \"Education\", y = \"Income\") +\n           scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_income <- ((in_recreation + in_food) / (in_shelter + in_education) + \n               plot_spacer())\n\n#add labels\ncorr_income + plot_annotation(title = \"Correlation between Income and its categories\", \n                           subtitle = \"High correlation between Cashflow and Expenses at all education level\", \n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))\n\n\n\n\n\n\n\nShow the code\nex_food <- ggscatterstats(data = resident_profile_rev,\n                           x = Food, y = Expenses,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Food\", \n           x = \"Food\", y = \"Expenses\") +\n           scale_y_continuous(labels = comma_format()) \n\nex_recreation <- ggscatterstats(data = resident_profile_rev,\n                           x = Recreation, y = Expenses,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Recreation\", \n           x = \"Recreation\", y = \"Expenses\") +\n           scale_y_continuous(labels = comma_format())\n\nex_shelter <- ggscatterstats(data = resident_profile_rev,\n                           x = Shelter_new, y = Expenses,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Shelter\", \n           x = \"Shelter\", y = \"Expenses\") +\n           scale_y_continuous(labels = comma_format()) \n\nex_education <- ggscatterstats(data = resident_profile_rev,\n                           x = Education, y = Expenses,\n                           type = \"nonparametric\") + \n           theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n           labs(title = \"Education\", \n           x = \"Education\", y = \"Expenses\") +\n           scale_y_continuous(labels = comma_format()) \n\n#combined plot and ensure layout is in order\ncorr_expenses <- ((ex_recreation + ex_food) / (ex_shelter + ex_education) + \n               plot_spacer())\n\n#add labels\ncorr_expenses + plot_annotation(title = \"Correlation between Expenses and its categories\", \n                           subtitle = \"High correlation between Cashflow and Expenses at all education level\", \n                           theme = theme(\n                             plot.title = element_text(size = 18),\n                             plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nFrom the results above, we can see that Recreation and Shelter are close to a strong positive linear relationship, Food has close to moderate positive linear relationship while Education has a weak positive linear relationship.\nAs seen above, there is an almost perfect positive linear relationship (>0.9) between Cash flow and Income across Education level. The Spearman correlation coefficient also increases at different education level."
  }
]