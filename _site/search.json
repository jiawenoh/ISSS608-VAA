[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Using p_load() of pacman package to load the required libraries\n\n\n\nHide the code\npacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse) \n\n\n\nImporting data\n\n\n\nHide the code\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-ggiraph",
    "title": "Hands-on Exercise 3",
    "section": "1) Interactive Data Visualization with ggiraph",
    "text": "1) Interactive Data Visualization with ggiraph\nStudent ID will appear when the mouse hovered to the specific data point.\n\nOutput:\n\n\nHide the code\np <-ggplot(data=exam_data, \n       aes(x = MATHS)) +\n    geom_dotplot_interactive(\n       aes(tooltip = ID),\n       stackgroups = TRUE, \n       binwidth = 1, \n       method = \"histodot\") +\n       scale_y_continuous(NULL, breaks = NULL)\n    \n    girafe(\n       ggobj = p,\n       width_svg = 6,\n       height_svg = 6*0.618\n             )\n\n\n\n\n\n\n\n\n1.1) Displaying multiple information with tooltip\nStudent ID and Class will appear when the mouse hovered to the specific data point.\n\nOutput:\n\n\nHide the code\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(\n       aes(tooltip = exam_data$tooltip), \n       stackgroups = TRUE,\n       binwidth = 1,\n       method = \"histodot\") +\n       scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(\n       ggobj = p,\n       width_svg = 8,\n       height_svg = 8*0.618\n           )\n\n\n\n\n\n\n\n\n\n1.2) Customizing tooltip style\nWhen the mouse hovered to the specific data point, the student ID will appear. We will customize the output to black and bold font with white background.\n\nOutput:\n\n\nHide the code\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(tooltip = ID),                   \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +               \n       scale_y_continuous(NULL,               \n                     breaks = NULL)\n    girafe(                                  \n      ggobj = p,                             \n      width_svg = 6,                         \n      height_svg = 6*0.618,\n      options = list(    #<<\n      opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n          )                                        \n\n\n\n\n\n\n\n\n\n1.3) Displaying statistics with tooltip\nWhen the mouse hovered to the specific data point, statistics will appear. In the below output, confidence interval will be displayed at 90% CI.\n\nOutput:\n\n\nHide the code\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean Maths Scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),) +\n            stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                  tooltip(y, ymax))),  \n            fun.data = \"mean_se\", \n                  geom = GeomInteractiveCol,  \n                  fill = \"light blue\"\n                  ) +\n           stat_summary(aes(y = MATHS),\n                 fun.data = mean_se,\n                 geom = \"errorbar\", width = 0.2, linewidth = 0.2\n                  )\n\n           girafe(ggobj = gg_point,\n               width_svg = 8,\n               height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n1.4) Hover effect with data_id aesthetic\nWhen the mouse hovered to the specific data point, data points that are associated with the data_id(CLASS) will be highlighted.\n\nOutput:\n\n\nHide the code\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(           \n       aes(data_id = CLASS),             \n       stackgroups = TRUE,               \n       binwidth = 1,                        \n       method = \"histodot\") +               \n     scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(                                  \n       ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618                      \n        )                                        \n\n\n\n\n\n\n\n\n\n1.5) Customizing Hover effect\nSimilar to 1.2, we will customize the Hover Effect with the help of CSS.\n\nOutput:\n\n\nHide the code\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(data_id = CLASS),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +               \n     scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(                                  \n       ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618,\n       options = list(                        \n       opts_hover(css = \"fill: #202020;\"),  \n       opts_hover_inv(css = \"opacity:0.2;\") \n           )                                        \n             )                                        \n\n\n\n\n\n\n\n\n\n1.6) Combining tooltip and Hover Effect\nIn the below output, we will combine both Interactive Data Visualization. The respective data points and the associated points will be reflected.\n\nOutput:\n\n\nHide the code\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(tooltip = CLASS, \n       data_id = CLASS),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +               \n     scale_y_continuous(NULL, breaks = NULL)\n     \n     girafe(                                  \n       ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618,\n      options = list(                        \n      opts_hover(css = \"fill: #202020;\"),  \n      opts_hover_inv(css = \"opacity:0.2;\") \n         )                                        \n           )                                        \n\n\n\n\n\n\n\n\n\n1.7) Click effect with onclick\nIn the below output, a new window will open upon a click (hotlink interactivity)\nNote: Click actions must be a string column\n\nOutput:\n\n\nHide the code\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(onclick = onclick),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +               \n     scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(                                  \n       ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\n1.8) Coordinated multiple views\nIn the below output, the graph will be interactive. Hovering on one data point will reflect the corresponding data point. We will be using :\n\npatchwork function [use inside girafe function]\nggiraph [use to create multiple views]\n\nNote: data_id aesthetic is critical, tooltip aesthetic is optional\n\nOutput:\n\n\nHide the code\np1 <- ggplot(data=exam_data, \n        aes(x = MATHS)) +\n     geom_dotplot_interactive(              \n       aes(data_id = ID),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") +  \n     coord_cartesian(xlim=c(0,100)) + \n     scale_y_continuous(NULL, breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n     geom_dotplot_interactive(              \n       aes(data_id = ID),              \n       stackgroups = TRUE,                  \n       binwidth = 1,                        \n       method = \"histodot\") + \n     coord_cartesian(xlim=c(0,100)) + \n     scale_y_continuous(NULL, breaks = NULL)\n\n     girafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n            )\n          )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-plotly",
    "title": "Hands-on Exercise 3",
    "section": "2) Interactive Data Visualization with plotly",
    "text": "2) Interactive Data Visualization with plotly\nThere are two ways to create interactive graph through plotly:\n\nplot_ly()\nggploty()\n\n\n2.1) Create interactive scatter plot with plot_ly() method\nIn the below output, the interactive graph is created through plot_ ly().\n\nOutput:\n\n\nHide the code\nplot_ly(data = exam_data, \n             x = ~MATHS, y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n2.2) Create interactive scatter plot with plot_ly() method\nIn the below output, the interactive graph is enhanced with the addition of RACE as a visual variable.\n\nOutput:\n\n\nHide the code\nplot_ly(data = exam_data, \n             x = ~MATHS, y = ~ENGLISH, color = ~RACE)\n\n\n\n\n\n\n\n\n\n2.3) Create interactive scatter plot with ggplotly() method\nIn the below output, the interactive graph is created through ggplotly().\n\nOutput:\nNote: only 1 additional line required (Line 7)\n\n\nHide the code\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n     geom_point(size=1) +\n    coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\nggplotly(p)\n\n\n\n\n\n\n\n\n\n2.4) Coordinated multiple views with plotly\nThe coordinated linked graphs will be achieved in three steps:\n\nUse highlight_key() of plotly as a shared data\nCreate two scatter plots through ggplot2 functions\nSubplot() of plotly package used to place them side by side\n\n\nOutput:\n\n\nHide the code\nd <- highlight_key(exam_data)\n\np1 <- ggplot(data=d, \n         aes(x = MATHS, y = ENGLISH)) +\n      geom_point(size=1) +\n      coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\np2 <- ggplot(data=d, \n         aes(x = MATHS, y = SCIENCE)) +\n      geom_point(size=1) +\n      coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\nNote to self: patchwork is not interactive in comparion but includes labelling"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualization-with-crosstalk-methods",
    "title": "Hands-on Exercise 3",
    "section": "3) Interactive Data Visualization with crosstalk methods",
    "text": "3) Interactive Data Visualization with crosstalk methods"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "Using p_load() of pacman package to load the required libraries\n\n\n\nHide the code\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes,tidyverse) \n\n\n\nImporting data\n\n\n\nHide the code\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#english-scores-vs-maths-scores-for-primary-3",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#english-scores-vs-maths-scores-for-primary-3",
    "title": "Hands-on Exercise 2",
    "section": "1) English scores vs Maths scores for Primary 3",
    "text": "1) English scores vs Maths scores for Primary 3\n\nOutput:\n\n\nHide the code\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n       geom_point() +\n       geom_smooth(method=lm, size=0.5) +  \n       geom_label_repel(aes(label = ID), fontface = \"bold\") +\n       coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n       ggtitle(\"English scores versus Maths scores for Primary 3\") +\n       theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#distribution-of-maths-scores",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#distribution-of-maths-scores",
    "title": "Hands-on Exercise 2",
    "section": "2) Distribution of Maths scores",
    "text": "2) Distribution of Maths scores\n\nOutput:\n\n\nHide the code\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n       geom_histogram(bins= 30, color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       theme_grey() + \n       ggtitle(\"Distribution of Maths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n2.1) ggtheme package\n\nThemes here\n\n\nOutput:\n\n\nHide the code\nggplot(data = exam_data, \n       aes(x=MATHS)) + \n       geom_histogram(bins=30, color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n      theme_economist() +\n       ggtitle(\"Distribution of Maths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n2.2) hrbthems package\n\nThemes here\n\n\nOutput:\n\n\nHide the code\nggplot(data = exam_data, \n       aes(x=MATHS)) + \n       geom_histogram(bins=20, boundary = 100,  \n       color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       theme_ipsum() +\n       ggtitle(\"Distribution of Maths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n2.2.1) hrbthems package: theme revision\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and,\ngrid argument is used to remove the x-axis grid lines.\n\n\nOutput:\n\n\nHide the code\nggplot(data = exam_data, \n       aes(x=MATHS)) + \n       geom_histogram(bins=20, boundary = 100,  \n       color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       theme_ipsum(grid = \"y\",axis_title_size = 18, base_size =15) +\n       ggtitle(\"Distribution of Maths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-multiple-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-multiple-graphs",
    "title": "Hands-on Exercise 2",
    "section": "3) Creating multiple graphs",
    "text": "3) Creating multiple graphs\nCreate composite plot by combining multiple graphs. Firstly, to create three statistical graphics.\n\n3.1) Distribution of Maths Scores\n\nOutput:\n\n\nHide the code\np1 <- ggplot(data = exam_data, \n       aes(x=MATHS)) + \n       geom_histogram(bins=20, boundary = 100,  \n       color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       ggtitle(\"Distribution of \\nMaths scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n3.2) Distribution of English Scores\n\nOutput:\n\n\nHide the code\np2 <- ggplot(data = exam_data, \n       aes(x=ENGLISH)) + \n       geom_histogram(bins=20, boundary = 100,  \n       color= \"grey30\", fill = \"grey95\") +\n       coord_cartesian(xlim=c(0,100)) +\n       ggtitle(\"Distribution of \\nEnglish scores\") +\n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n3.3) English scores vs Maths scores for Primary 3\n\nOutput :\n\n\nHide the code\np3 <- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n       geom_point() +\n       geom_smooth(method=lm, size=0.5) +  \n       coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n       ggtitle(\"English scores vs Maths \\nscores for Primary 3\") +\n       theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-multiple-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-multiple-graphs",
    "title": "Hands-on Exercise 2",
    "section": "4) Plotting multiple graphs",
    "text": "4) Plotting multiple graphs\nPoint to note:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\n\nTwo-Row Layout using the Division Sign /\n\nSource\n\n\n4.1) Combine 3.1 and 3.2\nIn this output, we will combine Distribution of Maths Scores and Distribution of English Scores.\n\nOutput :\n\n\nHide the code\np1 + p2\n\n\n\n\n\n\n\n\n4.2) Combine 3.1, 3.2, and 3.3\nPoint to note:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nSource\nIn this output, we will combine Distribution of Maths Scores, Distribution of English Scores, and English scores vs Maths scores for Primary 3 by stacking 3.1 and 3.2 on the left and 3.3 on the right.\n\n\nOutput :\n\n\nHide the code\np1 / p2 | p3\n\n\n\n\n\n\n\n\n4.3) Insert 3.2 into 3.3\nIn this output, we will insert Distribution of English Scores on top of English scores vs Maths scores for Primary 3.\n\nOutput :\n\n\nHide the code\np3 + inset_element(p2, left = 0.02, bottom = 0.6, right = 0.4, top = 1)\n\n\n\n\n\n\n\n\n4.4) Add patchwork and ggtheme to 4.2\nIn this output, we will add patchwork and ggtheme.\n\nOutput :\n\n\nHide the code\npatchwork <- p1 / p2 | p3\npatchwork & theme_economist(base_size = 15)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\nHide the code\npacman::p_load(tidyverse)\n\n\n\n\n\n\n\nHide the code\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "Using p_load() of pacman package to load tidyverse on\n\n\n\nHide the code\npacman:: p_load(tidyverse) \n\n\n\nImporting data\n\n\n\nHide the code\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-graph",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-graph",
    "title": "In-class Exercise 1",
    "section": "1) Horizontal Bar Graph",
    "text": "1) Horizontal Bar Graph\nChanging the colors of plot panel background of theme_minimal() to light blue and the color of grid lines to white.\n\nOutput:\n\n\nHide the code\nggplot(data= exam_data,\n       aes(x = RACE)) +\n       geom_bar() +\n       coord_flip() +\n       theme_minimal() +\n       theme(panel.background = element_rect(fill = 'lightblue') ,\n       panel.grid.minor=element_line(colour=\"white\"),\n       panel.grid.major=element_line(colour=\"white\")) +\n       ggtitle(\"Horizontal Bar Chart: \\nLight Blue theme and White grid lines \") +  \n       theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#vertical-bar-graph",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#vertical-bar-graph",
    "title": "In-class Exercise 1",
    "section": "2) Vertical Bar Graph",
    "text": "2) Vertical Bar Graph\nWith reference to the critics on the earlier slide, create a makeover looks similar to the figure on the right.\n\nOutput 1:\n\n\nHide the code\nggplot(data= exam_data,\n      aes(x = fct_infreq(RACE))) +\n      geom_bar() +\n      xlab(\"Race\") +\n      ylab(\"No.of\\nPupils\") +\n      ylim(0,220) +\n      geom_text(aes(label = paste(..count..,\",\", scales::percent(..count../sum(..count..),accuracy = 0.1))), \n      stat= \"count\", vjust = -0.5) +\n      ggtitle(\"Vertical Bar Chart: \\nSorted Frequency + Labelling \") +\n      theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nOutput 2: Forcats Package.:\n\n\nHide the code\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "title": "In-class Exercise 1",
    "section": "3) Histogram",
    "text": "3) Histogram\n\nAdding mean and median lines on the histogram plot.\nChange fill color and line color\n\n\nOutput:\n\n\nHide the code\nggplot(data= exam_data,\n       aes(x = MATHS)) +\n       geom_histogram(color=\"black\",fill=\"light blue\",bins = 30) +\n       geom_vline(aes(xintercept=mean(MATHS)),\n            color=\"red\", linetype=\"dashed\", size=1) +\n       geom_vline(aes(xintercept=median(MATHS)),\n            color=\"black\", linetype=\"dashed\", size=1) +\n       ggtitle(\"Histogram: \\nAdd lines and color \") +  \n       theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n3.1) By Gender\n\nThe background histograms show the distribution of English scores for all pupils.\n\n\nOutput:\n\n\nHide the code\nd <- exam_data   \nd_bg <- d[, -3] \n\nggplot(d, aes(x = ENGLISH)) +\n       geom_histogram (data= d_bg, bins=30, alpha = 0.2) +\n       geom_histogram (bins=30, color = 'black') +\n       facet_wrap(~ GENDER) + \n       theme_bw()       \n\n\n\n\n\n\n\nHide the code\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  theme_bw() \n\n\n\n\n\n\n\nHide the code\nd <- exam_data   \nd_bg <- d[, -3] \n\nggplot(data = exam_data, aes(x = ENGLISH, fill= GENDER, )) +\n    geom_histogram(bins = 30) +\n    facet_wrap(~ GENDER) +\n    guides(fill = FALSE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatterplot",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatterplot",
    "title": "In-class Exercise 1",
    "section": "4) Scatterplot",
    "text": "4) Scatterplot\n\nThe scatterplot show the relationship between English and Maths for all pupils.\n\n\nOutput:\n\n\nHide the code\nggplot(data = exam_data, \n        aes (x= MATHS, y= ENGLISH)) +\n        geom_point() +\n        geom_hline(yintercept=50, linetype=\"dashed\", color = \"darkgrey\") +\n        geom_vline(xintercept=50, linetype=\"dashed\", color = \"darkgrey\") +\n        coord_cartesian(xlim=c(0,100), ylim=c(0,100))"
  }
]